<?xml version="1.0" encoding="utf-8"?>
<project name="Magento2" basedir="../../" default="clean">
    <property environment="env"/>
    <property name="dir.build_base" location="${basedir}/dev/build"/>
    <property name="dir.build_report" location="${basedir}/dev/build/report"/>

    <!-- Copy the build customization files -->
    <target name="init" if="env.build_customization_dir">
        <copy todir="${basedir}" failonerror="true">
            <fileset dir="${basedir}/${env.build_customization_dir}"/>
        </copy>
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${dir.build_base}/bin/phpunit-with-xdebug.sh"/>
        </exec>
    </target>

    <target name="clean">
        <delete dir="${dir.build_report}" />

        <mkdir dir="${dir.build_report}/code_browser"/>
        <mkdir dir="${dir.build_report}/integration"/>
        <mkdir dir="${dir.build_report}/integration/coverage"/>
    </target>

    <!-- Configurations for different Magento editions -->
    <target name="prepare-ce">
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${dir.build_base}/extruder/extruder.php" />
        </exec>
        <exec dir="${basedir}" executable="${dir.build_base}/extruder/extruder.php" failonerror="true">
            <arg line="-w ${basedir} -l ${dir.build_base}/extruder/common_tests.txt -l ${dir.build_base}/extruder/ce.txt -v -s git" />
        </exec>
    </target>

    <!-- Unit tests with coverage statistic -->
    <target name="phpunit" depends="init">
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${dir.build_base}/bin/phpunit-with-xdebug.sh" />
        </exec>
        <!-- coverage html report coverage-html ${dir.build_report}/code_coverage -->
        <exec dir="${basedir}/dev/tests/unit" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr
                --log-junit ${dir.build_report}/phpunit.xml
                --coverage-clover ${dir.build_report}/clover.xml" />
        </exec>
    </target>

    <!-- Integration tests -->
    <target name="phpunit-integration" depends="init">
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${dir.build_base}/bin/phpunit-with-xdebug.sh" />
        </exec>
        <exec dir="${basedir}/dev/tests/integration" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr
                --log-junit ${dir.build_report}/integration/phpunit.xml
                --coverage-clover ${dir.build_report}/integration/clover.xml
                --coverage-html ${dir.build_report}/integration/coverage
                " />
        </exec>
    </target>

    <!-- Running all integration tests without xdebug and code coverage report generation -->
    <target name="integration-tests" depends="init">
        <exec dir="${basedir}/dev/tests/integration" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/integration-phpunit.xml" />
        </exec>
    </target>


    <!-- The fastest way of all tests execution without any additional processing -->
    <target name="phpunit-all" depends="init">
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${dir.build_base}/bin/phpunit-with-xdebug.sh" />
        </exec>
        <exec dir="${basedir}/dev/tests/unit" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr
                --log-junit ${dir.build_report}/unit-tests-with-xdebug.xml" />
        </exec>
        <exec dir="${basedir}/dev/tests/integration" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/integration-tests-with-xdebug.xml" />
        </exec>
        <exec dir="${basedir}/dev/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr
                --log-junit ${dir.build_report}/unit-tests.xml" />
        </exec>
        <exec dir="${basedir}/dev/tests/integration" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/integration-testst.xml" />
        </exec>
        <exec dir="${basedir}/dev/tests/integration/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${dir.build_report}/unit-tests-for-integration-test-framework.xml" />
        </exec>
        <exec dir="${basedir}/dev/tests/static/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${dir.build_report}/unit-tests-for-static-tests-framework.xml" />
        </exec>
    </target>

    <!-- product unit tests -->
    <target name="unit-tests-magento">
        <exec dir="dev/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/unit-tests-magento.xml"/>
        </exec>
    </target>

    <!-- product unit tests with xdebug -->
    <target name="unit-tests-magento-xdebug">
        <exec dir="dev/tests/unit" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/unit-tests-magento-xdebug.xml"/>
        </exec>
    </target>

    <!-- integration testing framework unit tests -->
    <target name="unit-tests-integration-framework">
        <exec dir="dev/tests/integration/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/unit-tests-integration-framework.xml"/>
        </exec>
    </target>

    <!-- static code analysis framework unit tests -->
    <target name="unit-tests-static-framework">
        <exec dir="dev/tests/static/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/unit-tests-static-framework.xml"/>
        </exec>
    </target>

    <!-- product integration tests -->
    <target name="integration-tests-magento" depends="init">
        <exec dir="dev/tests/integration" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/integration-tests-magento.xml"/>
        </exec>
    </target>

    <!-- product integration tests with xdebug -->
    <target name="integration-tests-magento-xdebug" depends="init">
        <exec dir="dev/tests/integration" executable="${dir.build_base}/bin/phpunit-with-xdebug.sh" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/integration-tests-magento-xdebug.xml"/>
        </exec>
    </target>

    <!-- all static tests -->
    <target name="static-tests-all">
        <exec dir="dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${dir.build_report}/static-tests-all.xml"/>
        </exec>
    </target>

    <target name="phpunit-selenium" description="Functional tests with selenium">
        <exec dir="${basedir}/dev/tests/functional/selenium" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${dir.build_report}/phpunit-selenium.xml
                --configuration phpunit.xml" />
        </exec>
    </target>

    <target name="load" description="JMeter load tests">
        <exec dir="${basedir}" executable="jmeter" failonerror="true">
            <arg line="-n -t ${dir.build_base}/jmeter/testplan.jmx -l ${dir.build_report}/loadtest.jtl" />
        </exec>
    </target>

    <target name="integration" depends="init,clean,phpunit-integration" />

    <target name="integration-ce" depends="init,clean,prepare-ce,integration-tests" />

    <target name="static_code_analysis" description="Static Source Code Analysis Tests" depends="init,clean">
        <exec dir="${basedir}/dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--log-junit ${dir.build_report}/static-tests.xml" />
        </exec>
    </target>

    <target name="performance_tests" description="Performance Tests" depends="init,clean">
        <exec executable="chmod" failonerror="true">
            <arg line="a+w ${basedir}/var ${basedir}/pub/media" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/dev/build/performance.php" />
        </exec>
    </target>

</project>
