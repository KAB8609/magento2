<?xml version="1.0" encoding="utf-8"?>
<project name="Magento2" basedir="../../" default="init">
    <property environment="env"/>
    <property name="file.phpunit_xdebug" location="dev/build/bin/phpunit-with-xdebug.sh"/>

    <!-- copy the build customization files -->
    <target name="init" if="env.build_customization_dir">
        <copy todir="${basedir}" failonerror="true">
            <fileset dir="${basedir}/${env.build_customization_dir}"/>
        </copy>
    </target>

    <!-- make script, that runs phpunit with xdebug enabled, executable -->
    <target name="prepare-xdebug">
        <exec executable="chmod" failonerror="true">
            <arg line="u+x ${file.phpunit_xdebug}"/>
        </exec>
    </target>

    <!-- delete files, that don't belong to Community Edition, from working copy -->
    <target name="prepare-ce">
        <property name="dir.extruder" location="${basedir}/dev/build/publication/extruder"/>
        <exec executable="php" failonerror="true">
            <arg line="-f ${dir.extruder}/extruder.php --
                -w ${basedir}
                -l ${dir.extruder}/common.txt
                -l ${dir.extruder}/ce.txt
                -v
                "/>
        </exec>
    </target>

    <!-- product unit tests -->
    <target name="unit-tests-magento">
        <exec dir="dev/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/unit-tests-magento.xml"/>
        </exec>
    </target>

    <!-- product unit tests with xdebug -->
    <target name="unit-tests-magento-xdebug" depends="prepare-xdebug">
        <exec dir="dev/tests/unit" executable="${file.phpunit_xdebug}" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/unit-tests-magento-xdebug.xml"/>
        </exec>
    </target>

    <!-- product unit tests with code coverage -->
    <target name="unit-tests-magento-coverage" depends="prepare-xdebug">
        <exec dir="dev/tests/unit" executable="${file.phpunit_xdebug}" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/unit-tests-magento-xdebug.xml
                --coverage-clover ${basedir}/unit-tests-magento-coverage.xml
                "/>
        </exec>
    </target>

    <!-- integration testing framework unit tests -->
    <target name="unit-tests-integration-framework">
        <exec dir="dev/tests/integration/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/unit-tests-integration-framework.xml"/>
        </exec>
    </target>

    <!-- static code analysis framework unit tests -->
    <target name="unit-tests-static-framework">
        <exec dir="dev/tests/static/framework/tests/unit" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/unit-tests-static-framework.xml"/>
        </exec>
    </target>

    <!-- product integration tests -->
    <target name="integration-tests-magento" depends="init">
        <exec dir="dev/tests/integration" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/integration-tests-magento.xml"/>
        </exec>
    </target>

    <!-- product integration tests with xdebug -->
    <target name="integration-tests-magento-xdebug" depends="init,prepare-xdebug">
        <exec dir="dev/tests/integration" executable="${file.phpunit_xdebug}" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/integration-tests-magento-xdebug.xml"/>
        </exec>
    </target>

    <!-- product integration tests with code coverage report -->
    <target name="integration-tests-magento-coverage" depends="init,prepare-xdebug">
        <delete dir="${basedir}/coverage-html"/>
        <mkdir dir="${basedir}/coverage-html"/>
        <exec dir="dev/tests/integration" executable="${file.phpunit_xdebug}" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/integration-tests-magento-xdebug.xml
                --coverage-clover ${basedir}/integration-tests-magento-coverage.xml
                --coverage-html ${basedir}/integration-tests-magento-coverage
                "/>
        </exec>
    </target>

    <!-- all static tests -->
    <target name="static-tests-all">
        <exec dir="dev/tests/static" executable="phpunit" failonerror="true">
            <arg line="--stderr --log-junit ${basedir}/static-tests-all.xml"/>
        </exec>
    </target>

    <!-- benchmark tests -->
    <target name="performance_tests" description="Performance Tests" depends="init">
        <exec executable="chmod" failonerror="true">
            <arg line="a+w ${basedir}/var ${basedir}/pub/media"/>
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/dev/build/performance.php"/>
        </exec>
    </target>

    <!-- Community Edition source code population to the public repository -->
    <target name="publish_ce">
        <property name="dir.publication_target" location="${basedir}/dev/build/publication/_tmp_target"/>
        <fail unless="env.bamboo_source_repository" message="Bamboo variable 'source_repository' must be defined."/>
        <fail unless="env.bamboo_target_repository" message="Bamboo variable 'target_repository' must be defined."/>
        <condition property="env.bamboo_source_branch" value="master">
            <not><isset property="env.bamboo_source_branch"/></not>
        </condition>
        <condition property="env.bamboo_target_branch" value="master">
            <not><isset property="env.bamboo_target_branch"/></not>
        </condition>
        <delete dir="${dir.publication_target}" failonerror="true"/>
        <exec executable="php" failonerror="true">
            <arg line="-f ${basedir}/dev/build/publication/publish.php --
                --source=${env.bamboo_source_repository} --source-branch=${env.bamboo_source_branch}
                --target=${env.bamboo_target_repository} --target-branch=${env.bamboo_target_branch}
                --target-dir=${dir.publication_target}
                --no-push
                "/>
        </exec>
        <exec executable="php" failonerror="true">
            <arg line="-f ${basedir}/dev/build/publication/sanity/sanity.php --
                -w ${dir.publication_target}
                -c ${basedir}/dev/build/publication/sanity/ce.xml
                -v
                "/>
        </exec>
        <copy todir="${dir.publication_target}/dev/tests/unit" failonerror="true">
            <fileset dir="${basedir}/dev/tests/unit"/>
        </copy>
        <copy todir="${dir.publication_target}/dev/tests/static" failonerror="true">
            <fileset dir="${basedir}/dev/tests/static"/>
        </copy>
        <ant dir="${dir.publication_target}" antfile="../../build.xml" inheritAll="false">
            <property name="env.build_customization_dir" value="../../customization/publicce"/>
            <target name="unit-tests-magento"/>
            <target name="unit-tests-static-framework"/>
            <target name="unit-tests-integration-framework"/>
            <target name="static-tests-all"/>
            <target name="integration-tests-magento"/>
        </ant>
        <exec dir="${dir.publication_target}" executable="git" failonerror="true">
            <arg line="push origin ${env.bamboo_target_branch}"/>
        </exec>
    </target>

</project>
