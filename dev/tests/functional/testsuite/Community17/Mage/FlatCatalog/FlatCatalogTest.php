<?php
/**
 * {license_notice}
 *
 * @category    Magento
 * @package     Mage_FlatCatalog
 * @subpackage  functional_tests
 * @copyright   {copyright}
 * @license     {license_link}
 */

/**
 * Configure Flat Catalog in System Configuration tests
 * @package     selenium
 * @subpackage  tests
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
class Core_Mage_FlatCatalog_FlatCatalogTest extends Mage_Selenium_TestCase
{
    /**
     * <p>Preconditions:</p>
     * <p>Navigate to System -> Configuration</p>
     */
    protected function assertPreConditions() // Preconditions
    {
        $this->loginAdminUser(); // Log-in
        $this->navigate('system_configuration'); // Navigate to System -> Configuration -> CATALOG -> Catalog
    }

    /**
     *<p>Preconditions for tests</p>
     *
     * @test
     * @return array
     */
    public function preconditionsForTests()
    {
        //Data
        $category = $this->loadDataSet('Category', 'sub_category_required');
        $catPath = $category['parent_category'] . '/' . $category['name'];
        $productCat = array('categories' => $catPath);
        $simple = $this->loadDataSet('Product', 'simple_product_visible', $productCat);
        $this->navigate('manage_categories', false);
        $this->categoryHelper()->checkCategoriesPage();
        $this->categoryHelper()->createCategory($category);
        $this->assertMessagePresent('success', 'success_saved_category');
        $this->navigate('manage_products');
        $this->productHelper()->createProduct($simple);
        $this->assertMessagePresent('success', 'success_saved_product');
        return array('productNames'       => array('simple' => $simple['general_name']),
                     'catName'            => $category['name'], 'catPath'            => $catPath);
    }

    /**
     * <p>Flat Catalog Category is turned</p>
     * <p>Steps:</p>
     * <p>1. Log in to  backend;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend;</p>
     * <p>3. Set Yes in the field  "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>Expected result:</p>
     * <p> Flat Catalog Category should be enabled.;</p>
     *
     *
     * @test
     * @TestlinkId    TL-MAGE-1964
     */
    public function flatCategoryIsEnabled()
    {
        //Data
        $flatCatalogData =
            $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend', array('use_flat_catalog_category' => 'Yes'));
        $this->addParameter('indexName', 'Category Flat Data');
        $this->addParameter('flatCatalogCategorySelected', '1');
        //Steps
        $this->navigate('system_configuration'); // Navigate to System -> Configuration -> CATALOG -> Catalog
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->navigate('index_management');
        $this->clickControl('link', 'reindex_index');
        //Verification
        $this->navigate('system_configuration');
        $this->openTab('catalog_catalog');
        $this->assertTrue($this->verifyForm($flatCatalogData, 'catalog_catalog',
            array('list_mode', 'product_listing_sort_by', 'allow_all_products_per_page'), 'Unexpected value in field'));
    }

    /**
     * <p>Configure search engine optimization settings: Autogenerated Site Map (Disable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Autogenerated Site Map"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p>"Site Map" link is not displayed in the footer. ;</p>
     *
     * @param $siteMap
     *
     * @dataProvider flatCategorySiteMapDataProvider
     *
     * @test
     * @TestlinkId    TL-MAGE-1883/1884
     */
    public function flatCategorySiteMap($siteMap)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_Search_engine_optimizations',
            array('autogenerated_site_map' => $siteMap));
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        if ($siteMap == 'Enable') {
            $this->assertTrue($this->controlIsPresent('link', 'site_map'));
        } else {
            $this->assertFalse($this->controlIsPresent('link', 'site_map'));
        }
    }

    public function flatCategorySiteMapDataProvider()
    {
        return array(array('Enable'),
                     array('Disable')
        );
    }

    /**
     * <p>Configure search engine optimization settings:Popular Search Terms(Enable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Popular Search Terms"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p> "Search Terms" link is displayed in the footer.;</p>
     *
     * @param $searchTerms
     *
     * @dataProvider flatCategorySearchTermsDataProvider
     *
     * @test
     * @TestlinkId    TL-MAGE-1885/1886
     */
    public function flatCategorySearchTerms($searchTerms)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_Search_engine_optimizations',
            array('popular_search_terms' => $searchTerms));
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->navigate('cache_storage_management');
        $this->clickControl('link', 'select_all', FALSE);
        $this->clickButton('submit');
        $this->goToArea('frontend');
        //Verification
        if ($searchTerms == 'Enable') {
            $this->assertTrue($this->controlIsPresent('link', 'popular_search_terms'));
        } else {
            $this->assertFalse($this->controlIsPresent('link', 'popular_search_terms'));
        }
    }

    public function flatCategorySearchTermsDataProvider()
    {
        return array(array('Enable'),
                     array('Disable')
        );
    }

    /**
     * <p>Allow Guest to Write Reviews (set No), when Flat Catalog Category is used</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Product Reviews section.</p>
     * <p>3. Select "No" in the field "﻿Allow Guests to Write Reviews";</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>2. Go to category;</p>
     * <p>3. Select some product and press it.;</p>
     * <p>4. Click link "Be the first to review this product ";</p>
     * <p>Expected result:</p>
     * <p> "Only registered users can write reviews.
     * Please, log in or register" warning is displayed under "Write Your Owm Revievw" on the detail page of the product.;</p>
     *
     *
     * @param $testData
     * @param $allowReviews
     *
     * @dataProvider flatCategoryAllowReviewsDataProvider
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1882/1881
     */
    public function flatCategoryAllowReviews($allowReviews, $testData)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_reviews',
            array('allow_guests_to_write_reviews' => $allowReviews));
        $product = $testData['productNames']['simple'];
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->productHelper()->frontOpenProduct($product);
        $this->assertTrue($this->controlIsPresent('link', 'first_review'));
        $this->clickControl('link', 'first_review');
        //Verification
        if ($allowReviews == 'Yes') {
            $this->assertTrue($this->buttonIsPresent('submit_review'));
        } else {
            $this->assertFalse($this->buttonIsPresent('submit_review'));
        }
    }

    public function flatCategoryAllowReviewsDataProvider()
    {
        return array(array('Yes'),
                     array('No')
        );
    }

    /**
     * <p>Configure frontend settings: Product Listing Sort by</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "Name" value in the field " Product Listing Sort by ".;</p>
     * <p>3. Navigate to view page category in the frontend;</p>
     * <p>Expected result:</p>
     * <p> Name options is displayed default in the "Sort By X" dropdown  in the  page category.;</p>
     *
     *
     * @param array   $testData
     *
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1880
     */
    public function flatCategoryListingSortBy($testData)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend',
            array('product_listing_sort_by' => 'Name'));
        $this->addParameter('sortBy', 'Name');
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'sort_by_selected'));
    }

    /**
     * <p>Configure frontend setting: Allow All Products per Page(No)</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "No" value in the field " Allow All Products per Page".;</p>
     * <p>3. Navigate to view page category in the frontend;</p>
     * <p>Expected result:</p>
     * <p> There is no "All" option in the Show X per page dropdown on the view page category on the  frontend.;</p>
     *
     *
     * @param array   $testData
     * @param $allProductsPerPage
     *
     * @dataProvider flatCategoryAllProductsPerPageDataProvider
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1879/1878
     */
    public function flatCategoryAllProductsPerPage($allProductsPerPage, $testData)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend',
            array('allow_all_products_per_page' => $allProductsPerPage));
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        //Verification
        if ($allProductsPerPage == 'Yes') {
            $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_all'));
        } else {
            $this->assertFalse($this->controlIsPresent('dropdown', 'show_per_page_all'));
        }
    }

    public function flatCategoryAllProductsPerPageDataProvider()
    {
        return array(array('Yes'),
                     array('No')
        );
    }

    /**
     * <p>Configure frontend settings: Product per Page on List</p>
     * <p>Preconditions:</p>
     * <p>1. Select "List"  value in the "List Mode" field;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "10,20,30,40" in the field "Products per Page on List Allowed Values".;</p>
     * <p>3. Set "10" value in the field "Products per Page on List Default Value";</p>
     * <p>4. Navigate to frontend to view page category;</p>
     * <p>Expected result:</p>
     * <p>Should be showed 10  per page (default). "10,20,30,40" values are displayed in the "Show X per page" drop box on the view page category.;</p>
     *
     *
     * @param array   $testData
     *
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1877
     */
    public function flatCategoryProductsOnList($testData)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend',
            array('products_per_page_on_list_allowed_values' => '10,20,30,40',
                  'products_per_page_on_list_default_value' => '10',
                  'list_mode' => 'List Only')
        );
        $this->addParameter('showPerPage', '10');
        //Steps
        $this->navigate('system_configuration'); // Navigate to System -> Configuration -> CATALOG -> Catalog
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_selected'));
        //Steps
        $this->addParameter('showPerPage', '20');
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        //Steps
        $this->addParameter('showPerPage', '30');
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        //Steps
        $this->addParameter('showPerPage', '40');
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
    }

    /**
     * <p>Configure frontend settings: Product per Page on Grid</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>3. Set "Yes" in the field "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>5. Select "Grid" value in the "List Mode" field;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "10,20,30" in the field "Products per Page on Grid Allowed Values".;</p>
     * <p>3. Set "10" value in the field "Products per Page on Grid Default Value".;</p>
     * <p>4. Navigate to frontend to view page category;</p>
     * <p>Expected result:</p>
     * <p>Should be showed 10  per page (default). "10,20,30" values are  displayed in the "Show X per page" drop box
     * on the view page category.;</p>
     *
     *
     * @param array   $testData
     *
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1876
     */
    public function flatCategoryProductsOnGrid($testData)
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend',
            array('products_per_page_on_grid_allowed_values' => '8,18,28',
                  'products_per_page_on_grid_default_value'  => '8',
                  'list_mode' => 'Grid Only')
        );
        $this->addParameter('showPerPage', '8');
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_selected'));
        //Steps
        $this->addParameter('showPerPage', '18');
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        //Steps
        $this->addParameter('showPerPage', '28');
        //Verification
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
    }

    /**
     * <p>Configure frontend settings: List Mode</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>3. Set "Yes" in the field "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Select value  "Grid Only" in the field "List Mode" under "Frontend".;</p>
     * <p>3. Select value  "List Only" in the field "List Mode" under "Frontend".;</p>
     * <p>4. Select value  "Grid (default)/ List" in the field "List Mode" under "Frontend";</p>
     * <p>5. Select value  "List (default)/Grig" in the field "List Mode" under "Frontend";</p>
     * <p>Expected result:</p>
     * <p>2. Products should  be displayed in a grid only.
     * Customers should not be able to change the product display;</p>
     * <p>3. Products should  be displayed in a list only.
     * Customers should not be able to change the product display;</p>
     * <p>4. Products should  be displayed in a grid (default),
     * but customers should  be able to change the product display as list;</p>
     * <p>5. Products should  be displayed in a list (default),
     * but customers should  be able to change the product display as grid;</p>
     *
     *
     *
     * @param array   $testData
     * @param $listMode
     *
     * @dataProvider flatCategoryListModeDataProvider
     * @depends preconditionsForTests
     *
     * @test
     * @TestlinkId    TL-MAGE-1875
     */
    public function flatCategoryListMode($listMode, $testData)
    {
        //Data
        $flatCatalogDataListMode =
            $this->loadDataSet('FlatCatalog', 'flat_catalog_frontend', array('list_mode' => $listMode));
        $this->addParameter('productName', $testData['productNames']['simple']);
        //Steps
        $this->navigate('system_configuration'); // Navigate to System -> Configuration -> CATALOG -> Catalog
        $this->systemConfigurationHelper()->configure($flatCatalogDataListMode);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        //Verification
        if ($listMode == 'List Only') {
            $this->assertFalse($this->controlIsPresent('link', 'grid'));
            $this->assertFalse($this->controlIsPresent('link', 'list'));
            $this->assertTrue($this->controlIsPresent('link', 'learn_more'));
        } elseif ($listMode == 'Grid Only') {
            $this->assertFalse($this->controlIsPresent('link', 'grid'));
            $this->assertFalse($this->controlIsPresent('link', 'list'));
            $this->assertFalse($this->controlIsPresent('link', 'learn_more'));
        } elseif ($listMode == 'List (default) / Grid') {
            $this->assertTrue($this->controlIsPresent('link', 'grid'));
            $this->assertTrue($this->controlIsPresent('link', 'list'));
            $this->assertTrue($this->controlIsPresent('link', 'learn_more'));
        } elseif ($listMode == 'Grid (default) / List') {
            $this->assertTrue($this->controlIsPresent('link', 'grid'));
            $this->assertTrue($this->controlIsPresent('link', 'list'));
            $this->assertFalse($this->controlIsPresent('link', 'learn_more'));
        }
    }

    public function flatCategoryListModeDataProvider()
    {
        return array(array('List Only'),
                     array('Grid Only'),
                     array('List (default) / Grid'),
                     array('Grid (default) / List')
        );
    }
}
?>
