<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * PHPUnit configuration for SOAP WS-I functional tests.
 *
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
-->
<phpunit bootstrap="./framework/bootstrap.php">
    <!-- Test suites definition -->
    <testsuites>
        <testsuite name="Magento SOAP WS-I API Functional Tests">
            <directory suffix="Test.php">testsuite/api</directory>
        </testsuite>
    </testsuites>

     <!-- Code coverage filters -->
    <filter>
        <whitelist>
            <!-- All CE modules -->
            <directory suffix=".php">../../app/code/core/Mage</directory>
            <exclude>
                <!-- Excluding installation and upgrade scripts -->
                <directory>../../app/code/core/Mage/*/sql</directory>
                <!-- Excluding data installation and upgrade scripts -->
                <directory>../../app/code/core/Mage/*/data</directory>
            </exclude>
        </whitelist>
    </filter>

    <!-- Code coverage report, optional -->
<!--
    <logging>
        <log type="coverage-html" target="../../build/report/integration/coverage"
            title="Magento 2 Integration Tests Code Coverage"
            charset="UTF-8" yui="true" highlight="true"
            lowUpperBound="35" highLowerBound="70"/>
        <log type="coverage-clover" target="../../build/report/integration/clover.xml"/>
    </logging>
-->

    <!-- PHP INI settings and constants definition -->
    <php>
        <ini name="date.timezone" value="America/Los_Angeles"/>
        <!-- HTTP Host-->
        <const name="TESTS_HTTP_HOST" value="tests.host"/>
        <!-- WebSerivice Type. Possible values: soap, soap_wsi -->
        <const name="TESTS_WEBSERVICE_TYPE" value="soap_wsi"/>
        <!-- Enable/Disable transactions in fixtures. Possible values: on (default), off (req for WS tests) -->
        <const name="TESTS_FIXTURE_TRANSACTION" value="off"/>
        <!-- Webserver URL -->
        <const name="TESTS_WEBSERVICE_URL" value="http://tests.url"/>
        <!-- Webserver API user -->
        <const name="TESTS_WEBSERVICE_USER" value="api"/>
        <!-- Webserver API key -->
        <const name="TESTS_WEBSERVICE_APIKEY" value="apiapi"/>
        <!-- Admin User -->
        <const name="TESTS_ADMIN_USERNAME" value="admin"/>
        <!-- Admin Password -->
        <const name="TESTS_ADMIN_PASSWORD" value="123123q"/>
        <!-- Customer Email -->
        <const name="TESTS_CUSTOMER_EMAIL" value="customer@example.com"/>
        <!-- Customer password -->
        <const name="TESTS_CUSTOMER_PASSWORD" value="123123q"/>
        <!-- Re-init installed magento config -->
        <const name="TESTS_REINIT_MAGE_CONFIG" value="true"/>

        <!-- DB vendor, optional. Possible values: mysql (default), oracle, mssql -->
        <!--<const name="TESTS_DB_VENDOR" value="mysql"/>-->
        <!-- Environment cleanup, optional. Possible values: uninstall, restoreDatabase -->
        <!-- <const name="TESTS_SHUTDOWN_METHOD" value="restoreDatabase"/> -->
        <!-- CSV Profiler Output file -->
        <!--<const name="TESTS_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Bamboo compatible CSV Profiler Output file name -->
        <!--<const name="TESTS_BAMBOO_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Metrics for Bamboo Profiler Output in PHP file that returns array -->
        <!--<const name="TESTS_BAMBOO_PROFILER_METRICS_FILE" value="../../build/profiler_metrics.php"/>-->

        <includePath>.</includePath>
        <includePath>./testsuite/api</includePath>
        <ini name="date.timezone" value="America/Los_Angeles"/>
        <!-- Local XML configuration file ('.dist' extension will be added, if the specified file doesn't exist) -->
        <!--<const name="TESTS_LOCAL_CONFIG_FILE" value="etc/local-mysql.xml"/>-->
        <const name="TESTS_LOCAL_CONFIG_FILE" value="etc/api-local-mysql.xml"/>
        <!-- Semicolon-separated 'glob' patterns, that match global XML configuration files -->
        <const name="TESTS_GLOBAL_CONFIG_FILES" value="../../../app/etc/*.xml"/>
        <!-- Semicolon-separated 'glob' patterns, that match module declaration XML configuration files -->
        <const name="TESTS_MODULE_CONFIG_FILES" value="../../../app/etc/modules/*.xml;etc/modules/*.xml"/>
        <!-- Whether to cleanup the application before running tests or not -->
        <!--<const name="TESTS_CLEANUP" value="enabled"/>-->
        <!-- CSV Profiler Output file -->
        <!--<const name="TESTS_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Bamboo compatible CSV Profiler Output file name -->
        <!--<const name="TESTS_BAMBOO_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Metrics for Bamboo Profiler Output in PHP file that returns array -->
        <!--<const name="TESTS_BAMBOO_PROFILER_METRICS_FILE" value="../../build/profiler_metrics.php"/>-->
        <!-- Magento Developer Mode status during tests execution. Disabled by default, possible value is "enabled", and anything else will disable this mode.-->
        <!--<const name="TESTS_MAGENTO_DEVELOPER_MODE" value="enabled"/>-->
    </php>

    <!-- Test listeners -->
    <listeners>
        <listener class="Magento_Test_Event_PhpUnit"/>
    </listeners>
</phpunit>
