<?php
/**
 * Cart payment methods API tests.
 *
 * {license_notice}
 *
 * @copyright {copyright}
 * @license {license_link}
 */
class Magento_Checkout_Model_Cart_Payment_ApiTest extends PHPUnit_Framework_TestCase
{
    /**
     * Test retrieving list of available payment methods for a particular quote
     *
     * @magentoDataFixture Magento/Checkout/_files/quote.php
     */
    public function testShoppingCartPaymentList()
    {
        $paymentMethods = Magento_Test_Helper_Api::call(
            $this,
            'shoppingCartPaymentList',
            array(
                'quoteId' => $this->_getQuote()->getId(),
            )
        );

        $this->assertCount(1, $paymentMethods, 'Exactly one payment method was expected.');
        $this->assertEquals('free', $paymentMethods[0]['code'], '"free" method expected');
    }

    /**
     * Test setting payment method for the cart
     *
     * @magentoDataFixture Magento/Checkout/_files/quote_with_address_saved.php
     */
    public function testShoppingCartPaymentMethod()
    {
        $paymentMethod = array(
            'po_number' => null,
            'method' => 'checkmo',
            'cc_cid' => null,
            'cc_owner' => null,
            'cc_number' => null,
            'cc_type' => null,
            'cc_exp_year' => null,
            'cc_exp_month' => null
        );

        $result = Magento_Test_Helper_Api::call(
            $this,
            'shoppingCartPaymentMethod',
            array(
                'quoteId' => $this->_getQuote()->getId(),
                'paymentData' => (object)$paymentMethod,
            )
        );

        $this->assertTrue($result, 'Unable to set payment method');
    }

    /**
     * Returns quote generated by fixture
     *
     * @return Magento_Sales_Model_Quote
     */
    protected function _getQuote()
    {
        /** @var Magento_Sales_Model_Resource_Quote_Collection $quoteCollection */
        $quoteCollection = Mage::getModel('Magento_Sales_Model_Resource_Quote_Collection');
        /** @var $quote Magento_Sales_Model_Quote */
        $quote = $quoteCollection->getFirstItem();

        return $quote;
    }
}
