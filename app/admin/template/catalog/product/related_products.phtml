<div id="related_product_panel"></div>
<div id="related_product_grid"></div>
<div id="related_product_grid_toolbar"></div>

<script type="text/javascript" language="javascript">
var relProducts = function(){
    this.container = '';
    
    // Dialog
    this.dialog    = new Ext.LayoutDialog(Ext.id(), {
        autoCreate : true,
        width:600,
        height:400,
        minWidth:400,
        minHeight:300,
        syncHeightBeforeShow: true,
        shadow:true,
        fixedcenter:true,
        center:{autoScroll:true}
    });
    this.dialog.setTitle('Choose Related Products');
    this.btnOk = this.dialog.addButton('OK', this.doCallback, this);
    this.btnOk.disable();
    this.dialog.setDefaultButton(this.dialog.addButton('Cancel', this.dialog.hide, this.dialog));


    
    this.dialogGrid= '';
    this.grid      = '';
    
    // flags
    this._loaded   = false;
};

relProducts.prototype = {
    showDialog : function(el, callback){
        this.dialog.show(el);
    },

    initGrid: function(){
        var ds = new Ext.data.Store({
            proxy: new Ext.data.ScriptTagProxy({
                url: 'http://www.yui-ext.com/forum2/topics-remote.php'
            }),
            reader: new Ext.data.JsonReader({
                root: 'topics',
                totalProperty: 'totalCount',
                id: 'topic_id'
            }, [
                {name: 'title', mapping: 'topic_title'},
                {name: 'author', mapping: 'username'},
                {name: 'totalPosts', mapping: 'topic_replies', type: 'int'},
                {name: 'lastPost', mapping: 'post_time', type: 'date', dateFormat: 'timestamp'},
                {name: 'lastPoster', mapping: 'user2'},
                {name: 'excerpt', mapping: 'post_text'}
            ]),
            remoteSort: false
        });
        ds.setDefaultSort('lastPost', 'desc');

        // pluggable renders
        function renderTopic(value, p, record){
            return String.format('<b>{0}</b>{1}', value, record.data['excerpt']);
        }
        function renderTopicPlain(value){
            return String.format('<b><i>{0}</i></b>', value);
        }
        function renderLast(value, p, r){
            return String.format('{0}<br/>by {1}', value.dateFormat('M j, Y, g:i a'), r.data['lastPoster']);
        }
        function renderLastPlain(value){
            return value.dateFormat('M j, Y, g:i a');
        }
        
        var cm = new Ext.grid.ColumnModel([{
               id: 'topic', // id assigned so we can apply custom css (e.g. .x-grid-col-topic b { color:#333 })
               header: "Topic",
               dataIndex: 'title',
               width: 420,
               renderer: renderTopic,
               css: 'white-space:normal;'
            },{
               header: "Author",
               dataIndex: 'author',
               width: 100,
               hidden: true
            },{
               header: "Total Posts",
               dataIndex: 'totalPosts',
               width: 70,
               align: 'right'
            },{
               id: 'last',
               header: "Last Post",
               dataIndex: 'lastPost',
               width: 150,
               renderer: renderLast
            }]);
        
        cm.defaultSortable = true;
        var grid = new Ext.grid.Grid('related_product_grid', {
            ds: ds,
            cm: cm,
            selModel: new Ext.grid.RowSelectionModel({singleSelect:true}),
            enableColLock:false
        });
        grid.render();
        
        var gridFoot = grid.getView().getHeaderPanel(true);

        // add a paging toolbar to the grid's footer
        var toolbar = new Ext.Toolbar(gridFoot);
        // add the detailed view button
        toolbar.add('-', {
            pressed: true,
            enableToggle:true,
            text: 'Detailed View',
            cls: 'x-btn-text-icon details',
            toggleHandler: toggleDetails
        });
        ds.load();
        function toggleDetails(btn, pressed){
            cm.getColumnById('topic').renderer = pressed ? renderTopic : renderTopicPlain;
            cm.getColumnById('last').renderer = pressed ? renderLast : renderLastPlain;
            grid.getView().refresh();
        }

        var layuot = new Ext.BorderLayout(Ext.DomHelper.append(Mage.Catalog_Product.editPanel.getEl(), {tag:'div'}, true), {
                 center:{
                     autoScroll:true,
                     titlebar:false,
                     resizeTabs : true,
                     tabPosition: 'top'
                 }
        });
        layuot.beginUpdate();
        layuot.add('center', new Ext.GridPanel(grid));
        layuot.endUpdate();
    }
};

relProductChooser = new relProducts();
//relProductChooser.initGrid();
</script>