<script type="text/javascript" language="javascript">
if (!Mage.Collection.get('category_tree_context_menu')){

    var categoryTreeHandler = new Object();
    categoryTreeHandler.showProducts = function(item,event){
        var contentPanel;
        if (contentPanel=Mage.Collection.get('catalog_main_content_panel')){
            if (item.parentMenu.selectedNode.id){
                contentPanel.setUrl('<?=$this->baseUrl?>/mage_catalog/product/grid/category/'+item.parentMenu.selectedNode.id);
                contentPanel.refresh();
            }
        }
    };
    categoryTreeHandler.editCategory = function(item,event){
        alert('edit category');
    };
    categoryTreeHandler.deleteCategory = function(item,event){
        alert('delete category');
    };
    categoryTreeHandler.clickCategory = function(node,event){
        if (Mage.Collection.get('category_tree_context_menu'))
        {
            Mage.Collection.get('category_tree_context_menu').hide();
        }
    };
    categoryTreeHandler.dblClickCategory = function(node,event){

    }


    var categoryTreeContextMenu = new Ext.menu.Menu({
        id : 'category_context_menu',
        items: [{text: 'Show Category Products',handler:categoryTreeHandler.showProducts},
                '-',
                {text: 'Edit Catecory',handler:categoryTreeHandler.editCategory},
                {text: 'Delete Category',handler:categoryTreeHandler.deleteCategory}]
    });

    categoryTreeContextMenu.showNodeContextMenu = function(node, event){
        this.selectedNode = node;
        node.select();
        this.showAt(event.getXY(),this.parentMenu,false);
    };
    Mage.Collection.add('category_tree_context_menu', categoryTreeContextMenu);
    Mage.Collection.add('category_tree_handler', categoryTreeHandler);
}

// Add Listeners
Mage.Collection.get('catalog_category_tree').addListener(
    'contextmenu',
    Mage.Collection.get('category_tree_context_menu').showNodeContextMenu,
    Mage.Collection.get('category_tree_context_menu')
);

Mage.Collection.get('catalog_category_tree').addListener(
    'click',
    Mage.Collection.get('category_tree_handler').clickCategory,
    Mage.Collection.get('category_tree_handler')
);

Mage.Collection.get('catalog_category_tree').addListener(
    'dblclick',
    Mage.Collection.get('category_tree_handler').dblClickCategory,
    Mage.Collection.get('category_tree_handler')
);



function moveNode(obj) {
//    Ext.dump(obj.target.id);
//    Ext.dump(obj.point);
//    Ext.dump(obj.dropNode.id);
//    Ext.dump('===================================');

    var url = BASE_URL + '/mage_catalog/category/move/';

    var data = {
        id: obj.dropNode.id
    }

    switch (obj.point) {
        case 'above' :
            data.pid = obj.target.parentNode.id;
            if (obj.target.previousSibling) {
                data.aid = obj.target.previousSibling.id;
            } else {
                data.aid = 0;
            }
            break;
        case 'below' :
            data.pid = obj.target.parentNode.id;
            data.aid = obj.target.id;
        break;
        case 'append' :
            data.pid = obj.target.id;
            data.aid = obj.target.lastChild.id;
        break;
        default :
            obj.cancel = true;
            return obj;
    }


    var success = function(o) {
        try { eval(o.responseText); } catch(e) { Ext.dump(e); }
    };
    var failure = function(o) {
        Ext.dump(o.statusText);
    };

    var pd = [];
    for(var key in data) {
        pd.push(encodeURIComponent(key), "=", encodeURIComponent(data[key]), "&");
    }
    pd.splice(pd.length-1,1);
    var con = new Ext.lib.Ajax.request('POST', url, {success:success,failure:failure, scope:obj}, pd.join(""));
}
var root = Mage.Collection.get('catalog_category_tree');
root.addListener('beforenodedrop', moveNode);
</script>
