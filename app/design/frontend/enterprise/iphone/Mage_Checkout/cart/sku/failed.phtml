<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     default_iphone
 * @copyright   {copyright}
 * @license     {license_link}
 */

/**
 * Order by SKU Failed Items grid
 *
 * @see Enterprise_Checkout_Block_Sku_Products
 */
?>
<div class="failed-products">
    <h2 class="sub-title"><?php echo $this->__('Products Requiring Attention') ?></h2>
    <form action="<?php echo $this->getFormActionUrl() ?>" method="post">
        <fieldset>
            <table id="failed-products-table" class="data-table cart-table">
                <tfoot>
                    <tr>
                        <td colspan="50" class="a-right">
                            <button type="submit" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-update"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button>
                            <button id="remove_all_failed_items" type="button" title="<?php echo $this->__('Remove All') ?>" class="button"><span><span><?php echo $this->__('Remove All') ?></span></span></button>
                        </td>
                    </tr>
                </tfoot>
                <tbody>
                    <?php foreach($this->getItems() as $_item): ?>
                        <?php echo $this->getItemHtml($_item) ?>
                    <?php endforeach ?>
                </tbody>
            </table>
            <script type="text/javascript">decorateTable('failed-products-table')</script>
        </fieldset>
    </form>
</div>
<script type="text/javascript">
//<![CDATA[
if($('remove_all_failed_items')) {
    $('remove_all_failed_items').observe('click', function() {
        setLocation('<?php echo $this->getDeleteAllItemsUrl(); ?>')
    });
}

$$('.sku-out-of-stock').each(function(e) {
    var qtyElement = $(e.ancestors()[2]).select('td input.qty')[0];
    if (qtyElement) {
        qtyElement.addClassName('disabled');
        qtyElement.disable();
    }
});

$$('input.sku_failed_qty').each(function(e) {
    var qtyElement = $(e.ancestors()[1]).select('td input.qty')[0];
    if (qtyElement) {
        qtyElement.observe('change', function() {
            $(e).value = $(qtyElement).value;
        })
    }
});

var validateErrorGrid = function (event)
{
    var $errorTable = event ? event.findElement('#failed-products-table') : $('failed-products-table');
    if ($errorTable) {
        $errorTable.select('input.qty').each(function ($qty)
        {
            if ($qty.disabled) {
                $qty.removeClassName('validation-failed');
                return;
            }
            var tr = $qty.up('tr');
            var $maxAllowed = tr.select('.qty_max_allowed');
            var $minAllowed = tr.select('.qty_min_allowed');
            var $qtyIncrements = tr.select('.qty_increments');
            var qty = parseFloat($qty.value);
            var isMaxAllowedValid = !$maxAllowed.length || (qty <= parseFloat($maxAllowed[0].value));
            var isMinAllowedValid = !$minAllowed.length || (qty >= parseFloat($minAllowed[0].value));
            var isQtyIncrementsValid = !$qtyIncrements.length || (modulo(qty, parseFloat($qtyIncrements[0].value)) == 0);
            if (isMaxAllowedValid && isMinAllowedValid && isQtyIncrementsValid && qty > 0) {
                $qty.removeClassName('validation-failed');
            } else {
                $qty.addClassName('validation-failed');
            }
        });
    }
};

// Initially mark invalid qty inputs
validateErrorGrid();

/**
 * Live qty field validation
 */
document.observe('keyup', function (event)
{
    validateErrorGrid(event);
});
//]]>
</script>
