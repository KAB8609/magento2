<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * @category   design_default
 * @package    Mage
 * @copyright  Copyright (c) 2004-2007 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?
/**
 * @methods
 *  getTitle() - string
 *  getSaveUrl() - string
 *  getSections() - array
 *  getForm() - html
 */
?>

<form method="POST" action="<?=$this->getUrl('*/*/generate')?>">

<div class="content-header">
	<table cellspacing="0" class="grid-header">
		<tr>
			<td><h3><?=$this->__("Generate File/Products Import/Export Profile")?></h3></td>
			<td class="form-buttons"><?=$this->getBackButtonHtml()?><?=$this->getGenerateButtonHtml()?></td>
		 </tr>
	</table>
</div>

<style type="text/css">
    #profile-generator select, #profile-generator input.input-text { width:200px; }
</style>
<script type="text/javascript">
function showOption(select)
{
    for (var i=0, l=select.options.length, v, el; i<l; i++) {
        v = select.options[i].value;
        if (el = $(select.id+'_'+v)) {
            el.style.display = v==select.value ? 'block' : 'none';
        }
    }
}

function addFieldMapping()
{
    new Insertion.Bottom($('map_container'), $('map_template').innerHTML);
}

function removeFieldMapping(button)
{
    Element.remove(button.parentNode);
}
</script>

<div id="profile-generator" class="entry-edit profile-generator">
    <h4 class="icon-head head-edit-form fieldset-legend"><?=$this->__("Profile Information")?></h4>
    <fieldset>
        <legend><?=$this->__("Profile Information")?></legend>
        <span class="field-row">
            <label for="profile_name"><?=$this->__("Name:")?></label>
            <input class="input-text" id="profile_name" name="gui_data[profile][name]" value="<?=$this->getValue('gui_data/profile/name')?>"/>
        </span>
        <span class="field-row">
            <label for="profile_direction"><?=$this->__("Direction:")?></label>
            <select id="profile_direction" name="gui_data[profile][direction]">
                <option value="import" <?=$this->getSelected('gui_data/profile/direction', 'import')?>><?=$this->__("Import")?></option>
                <option value="export" <?=$this->getSelected('gui_data/profile/direction', 'export')?>><?=$this->__("Export")?></option>
            </select>
        </span>
    </fieldset>

    <h4 class="icon-head head-edit-form fieldset-legend"><?=$this->__("File Information")?></h4>
    <fieldset>
        <legend><?=$this->__("File Information")?></legend>
        <span class="field-row">
            <label for="file_method"><?=$this->__("Method:")?></label>
            <select id="file_method" name="gui_data[file][method]" onchange="showOption(this)">
                <option value="http" <?=$this->getSelected('gui_data/file/method', 'http')?>><?=$this->__("Upload Interactively")?></option>
                <option value="io" <?=$this->getSelected('gui_data/file/method', 'io')?>><?=$this->__("Local/Remote File")?></option>
            </select>
        </span>
        <div id="file_method_http">
            <?=$this->__("Interactive Downloading is not supported yet. For file download link please choose Local/Remote file.")?>
        </div>
        <div id="file_method_io" style="display:none">
            <span class="field-row">
                <label for="file_type"><?=$this->__("Type:")?></label>
                <select id="file_type" name="gui_data[file][type]" onchange="showOption(this)">
                    <option value="file" <?=$this->getSelected('gui_data/file/type', 'file')?>><?=$this->__("Local File")?></option>
                    <option value="ftp" <?=$this->getSelected('gui_data/file/type', 'ftp')?>><?=$this->__("FTP Server")?></option>
                </select>
            </span>
            <span class="field-row">
                <label for="file_filename"><?=$this->__("File name:")?></label>
                <input class="input-text" id="file_filename" name="gui_data[file][filename]" value="<?=$this->getValue('gui_data/file/filename')?>"/>
            </span>
            <span class="field-row">
                <label for="file_path"><?=$this->__("Path:")?></label>
                <input class="input-text" id="file_path" name="gui_data[file][path]" value="<?=$this->getValue('gui_data/file/path')?>"/>
            </span>
            <div id="file_type_ftp" style="display:none">
                <span class="field-row">
                    <label for="file_host"><?=$this->__("FTP Host[:Port]")?></label>
                    <input class="input-text" id="file_host" name="gui_data[file][host]" value="<?=$this->getValue('gui_data/file/host')?>"/>
                </span>
                <span class="field-row">
                    <label for="file_user"><?=$this->__("User name")?></label>
                    <input class="input-text" id="file_user" name="gui_data[file][user]" value="<?=$this->getValue('gui_data/file/user')?>"/>
                </span>
                <span class="field-row">
                    <label for="file_password"><?=$this->__("Password")?></label>
                    <input class="input-text" id="io_password" name="gui_data[file][password]" value="<?=$this->getValue('gui_data/file/name')?>"/>
                </span>
                <span class="field-row">
                    <label for="file_passive"><?=$this->__("Passive mode")?></label>
                    <input type="checkbox" id="file_passive" name="gui_data[file][passive]" value="1" <?=$this->getChecked('gui_data/file/passive')?>/>
                </span>
            </div>
        </div>
    </fieldset>

    <h4 class="icon-head head-edit-form fieldset-legend"><?=$this->__("Data Format")?></h4>
    <fieldset>
        <legend><?=$this->__("Data Format")?></legend>
        <span class="field-row">
            <label for="parse_type"><?=$this->__("Type:")?></label>
            <select id="parse_type" name="gui_data[parse][type]" onchange="showOption(this)">
                <option value="excel_xml" <?=$this->getSelected('gui_data/parse/type', 'excel_xml')?>><?=$this->__("MS Excel XML")?></option>
                <option value="csv" <?=$this->getSelected('gui_data/parse/type', 'csv')?>><?=$this->__("CSV / Tab separated")?></option>
            </select>
        </span>
        <div id="parse_type_excel_xml">
            <span class="field-row">
                <label for="parse_single_sheet"><?=$this->__("Spreadsheet Name:")?></label>
                <input class="input-text" id="parse_single_sheet" name="gui_data[parse][single_sheet]" value="<?=$this->getValue('gui_data/parse/single_sheet')?>"/> <?=$this->__("(Leave empty for first spreadsheet)")?>
            </span>
        </div>
        <div id="parse_type_csv" style="display:none">
            <span class="field-row">
                <label for="parse_delimiter"><?=$this->__("Delimiter:")?></label>
                <input id="parse_delimiter" name="gui_data[parse][delimiter]" value="<?=$this->getValue('gui_data/parse/delimiter', ',')?>"/> <?=$this->__("(\\t for tab)")?>
            </span>
            <span class="field-row">
                <label for="parse_enclose"><?=$this->__("Enclose:")?></label>
                <input id="parse_enclose" name="gui_data[parse][enclose]" value="<?=$this->getValue('gui_data/parse/enclose', '"')?>"/>
            </span>
        </div>
        <span class="field-row">
            <label for="parse_fieldnames"><?=$this->__("Field names in first row:")?></label>
            <input type="checkbox" id="parse_fieldnames" name="gui_data[parse][fieldnames]" value="true" <?=$this->getChecked('gui_data/parse/fieldnames')?>/>
            <?=$this->__("(If unchecked, only mapped fields will be imported. Use column1, column2, etc.)")?>
        </span>
    </fieldset>

    <h4 class="icon-head head-edit-form fieldset-legend"><?=$this->__("Field Mapping")?></h4>
    <fieldset>
        <legend><?=$this->__("Field Mapping")?></legend>
        <div id="map_template" style="display:none">
            <span class="field-row">
                <?=$this->__("In Database:")?> <select name="gui_data[map][db][]">
                    <?foreach ($this->getAttributes() as $i=>$attribute):?>
                        <option value="<?=$attribute->getAttributeCode()?>"><?=$attribute->getAttributeCode()?></option>
                    <?endforeach?>
                </select>
                &lt;--&gt;
                <?=$this->__("In File:")?> <input class="input-text" name="gui_data[map][file][]"/>
                <?=$this->getRemoveMapButtonHtml()?>
            </span>
        </div>
        <div id="map_container">
            <?foreach ($this->getData('gui_data/map/db') as $i=>$dbField):?>
                <span class="field-row">
                    <?=$this->__("In Database:")?> <select name="gui_data[map][db][]">
                    <?foreach ($this->getAttributes() as $j=>$attribute):?>
                        <option value="<?=$attribute->getAttributeCode()?>" <?=$this->getSelected('gui_data/map/db/'.$i, $j)?>><?=$attribute->getAttributeCode()?></option>
                    <?endforeach?>
                    </select>
                &lt;--&gt;
                <?=$this->__("In File:")?> <input class="input-text" name="gui_data[map][file][]" value="<?=$this->getValue('gui_data/map/file/'.$i)?>"/>
                <?=$this->getRemoveMapButtonHtml()?>
            <?endforeach?>
        </div>
        <?=$this->getAddMapButtonHtml()?>
    </fieldset>

    <h4 class="icon-head head-edit-form fieldset-legend"><?=$this->__("Products")?></h4>
    <fieldset>
        <legend><?=$this->__("Products")?></legend>
        <span class="field-row">
            <label for="eav_target_store"><?=$this->__("Target store:")?></label>
            <select id="eav_target_store" name="gui_data[eav][target_store]" onchange="showOption(this)">
                <option value="use_store_column" <?=$this->getSelected('gui_data/eav/target_store', 'use_store_column')?>><?=$this->__("Use 'store' column in file")?></option>
                <option value="specific" <?=$this->getSelected('gui_data/eav/target_store', 'specific')?>><?=$this->__("Specific store")?></option>
            </select>
        </span>
        <div id="eav_target_store_specific" style="display:none">
            <span class="field-row">
                <label for="eav_store"><?=$this->__("Store:")?></label>
                <select id="eav_store" name="gui_data[eav][store]">
                    <option value="0"><?=$this->__("Only for admin")?></option>
                    <?foreach ($this->getStores() as $storeNode):?>
                        <?if ($storeNode->descend('system/store/id')==0) continue?>
                        <option value="<?=$storeNode->getName()?>" <?=$this->getSelected('gui_data/eav/store', $storeNode->getName())?>><?=$storeNode->descend('system/store/name')?></option>
                    <?endforeach?>
                </select>
            </span>
        </div>
    </fieldset>
</div>

</form>
