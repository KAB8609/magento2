<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design_default
 * @package     Mage_Downloadable
 * @copyright   Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * @see Mage_Downloadable_Block_Adminhtml_Catalog_Product_Edit_Tab_Downloadable_Samples
 */
?>
<?php $_product = $this->getProduct() ?>
<div class="fieldset">
    <div class="grid">
        <div class="hor-scroll">
            <table cellspacing="0" class="data">
                <col />
                <col width="420" />
                <col width="1" />
                <col width="1" />
                <thead>
                    <tr class="headings">
                        <th><?php echo Mage::helper('downloadable')->__('Title') ?> <span class="required">*</span></th>
                        <th><?php echo Mage::helper('downloadable')->__('File') ?></th>
                        <th><span class="nobr"><?php echo Mage::helper('downloadable')->__('Sort Order') ?></span></th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <td colspan="4" class="a-right"><?php echo $this->getAddButtonHtml() ?></td>
                    </tr>
                </tfoot>
                <tbody id="sample_items_body">
                </tbody>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript">
//<![CDATA[>
var sampleTemplate = '<tr>' +
                        '<td>' +
                            '<input type="hidden" class="__delete__" name="downloadable[sample][{{id}}][is_delete]" value="" />' +
                            '<input type="hidden" name="downloadable[sample][{{id}}][sample_id]" value="{{sample_id}}" />' +
                            '<input type="text" class="required-entry input-text" name="downloadable[sample][{{id}}][title]" value="{{title}}" />' +
                        '</td>' +
                        '<td class="files files-wide">' +
                            '<p><label><input type="radio" class="radio" name="downloadable[sample][{{id}}][type]" value="file" /> File:</label> <input type="file" size="43" name="downloadable[sample][{{id}}][sample_file]" value="" class="input-file" /></p>' +
                            '<p><label><input type="radio" class="radio" name="downloadable[sample][{{id}}][type]" value="url" /> URL:</label> <input type="text" class="required-entry input-text" name="downloadable[sample][{{id}}][sample_url]" value="{{sample_url}}" /></p>' +
                        '</td>' +
                        '<td class="a-center"><input type="text" name="downloadable[sample][{{id}}][sort_order]" value="{{sort_order}}" class="input-text sort" /></td>' +
                        '<td>' +
                            '<button type="button" class="scalable delete icon-btn delete-sample-item"><span>Delete</span></button>' +
                        '</td>' +
                    '</tr>';

var sampleItems = {
    tbody : $('sample_items_body'),
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : sampleTemplate,
    itemCount : 0,
    add : function(data) {
        this.template = new Template(this.templateText, this.templateSyntax);

        if(!data.sample_id){
            data = {};
            data.sample_id  = 0;
        }
        data.id = this.itemCount;
        Element.insert(this.tbody, {'bottom':this.template.evaluate(data)});

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));
        if(element){
            element.down('input[type="hidden"].__delete__').value = '1';
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('tbody#sample_items_body .delete-sample-item');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    }
}

sampleItems.bindRemoveButtons();

if($('add_sample_item')){
    Event.observe('add_sample_item', 'click', sampleItems.add.bind(sampleItems));
}

<?php foreach ($this->getSampleData() as $item): ?>
    sampleItems.add(<?php echo $item->toJson() ?>);
<?php endforeach; ?>

//]]>
</script>