<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design_default
 * @package     Mage_Downloadable
 * @copyright   Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php

/**
 * @see Mage_Downloadable_Block_Adminhtml_Catalog_Product_Edit_Tab_Downloadable_Links
 */
?>
<?php $_product = $this->getProduct()?>
<div class="fieldset">
<table cellspacing="0" class="form-list">
    <tbody>
        <tr class="headings">
            <td class="label"><label for="name"><?php echo Mage::helper('downloadable')->__('Title')?></label>
            </td>
            <td class="value">
                <input type="text" class="input-text" name="product[links_title]" value="<?php echo $_product->getId()?$_product->getLinksTitle():$this->getLinksTitle() ?>" <?php echo ($_product->getStoreId() && $this->getUsedDefault())?'disabled="disabled"':'' ?> />
            </td>
            <td class="scope-label"><?php if (!Mage::app()->isSingleStoreMode()): ?>[STORE VIEW]<?php endif; ?></td>
            <td class="value use-default">
            <?php if($_product->getStoreId()): ?>
                <input id="link_title_default" type="checkbox" name="use_default[]" value="links_title" onclick="toggleValueElements(this, this.parentNode.parentNode)" <?php echo $this->getUsedDefault()?'checked="checked"':'' ?> />
                <label class="normal" for="link_title_default">Use Default Value</label>
            <?php endif; ?>
            </td>
        </tr>
    </tbody>
</table>
<br />
<table cellspacing="0" class="form-list">
	<tbody>
		<tr class="headings">
			<td class="label"><label for="name"><?php echo Mage::helper('downloadable')->__('Links can be purchased separately')?></label>
			</td>
			<td class="value">
                    <?php echo $this->getPurchasedSeparatelySelect()?>
                </td>
			<td class="scope-label"><?php if (!Mage::app()->isSingleStoreMode()): ?>[GLOBAL]<?php endif; ?></td>
			<td><small>&nbsp;</small></td>
		</tr>
	</tbody>
</table>
<br />
<div class="grid">
<div class="hor-scroll">
<table cellspacing="0" class="data">
	<col />
	<col />
	<col />
	<col />
	<col width="205" />
	<col width="205" />
	<col width="1" />
	<col width="1" />
	<thead>
		<tr class="headings">
			<th><?php echo Mage::helper('downloadable')->__('Title')?> <span class="required">*</span></th>
			<th><?php echo Mage::helper('downloadable')->__('Price')?></th>
			<th><span class="nobr"><?php echo Mage::helper('downloadable')->__('Max. Downloads')?></span></th>
			<th><?php echo Mage::helper('downloadable')->__('Shareable')?></th>
			<th><?php echo Mage::helper('downloadable')->__('Sample')?></th>
			<th><?php echo Mage::helper('downloadable')->__('File')?></th>
			<th><span class="nobr"><?php echo Mage::helper('downloadable')->__('Sort Order')?></span></th>
			<th>&nbsp;</th>
		</tr>
	</thead>
	<tfoot>
		<tr>
			<td colspan="8" class="a-right"><?php
echo $this->getAddButtonHtml()?></td>
		</tr>
	</tfoot>
	<tbody id="link_items_body">
	</tbody>
</table>
</div>
</div>
</div>

<script type="text/javascript">
//<![CDATA[>
var linkTemplate = '<tr>' +
    '<td>' +
        '<input type="hidden" class="__delete__" name="downloadable[link][{{id}}][is_delete]" value="" />' +
        '<input type="hidden" name="downloadable[link][{{id}}][link_id]" value="{{link_id}}" />' +
        '<input type="text" class="required-entry input-text" name="downloadable[link][{{id}}][title]" value="{{title}}" />' +
        '<?php echo $_product->getStoreId()?'<input type="checkbox" id="downloadable_link_{{id}}_title" name="downloadable[link][{{id}}][use_default_title]" value="1" /><label class="normal" for="downloadable_link_{{id}}_title">Use Default Value</label>':'' ?>' +
    '</td>' +
    '<td class="input-price">' +
        '<input type="text" class="required-entry input-text" name="downloadable[link][{{id}}][price]" value="{{price}}" /> [<?php echo Mage::app()->getBaseCurrencyCode() ?>]' +
        '<?php echo $_product->getStoreId() && $this->getIsPriceWebsiteScope()?'<br /><input type="checkbox" id="downloadable_link_{{id}}_price" name="downloadable[link][{{id}}][use_default_price]" value="1" /><label class="normal" for="downloadable_link_{{id}}_price">Use Default Value</label>':'' ?>' +
    '</td>' +
    '<td><input type="text" name="downloadable[link][{{id}}][number_of_downloads]" class="input-text downloads" value="{{number_of_downloads}}" />' +
    '<p><input type="checkbox" class="checkbox" name="downloadable[link][{{id}}][is_unlimited]" value="1" {{is_unlimited}} /> <label>Unlimited</label></p></td>' +
    '<td class="a-center">' +
        '<select id="downloadable_link _{{id}}_shareable" name="downloadable[link][{{id}}][is_shareable]">' +
            '<option value="1">Yes</option>' +
            '<option value="0">No</option>' +
            '<option value="2" selected="selected">Use config</option>' +
        '</select>' +
    '</td>' +
    '<td class="files">' +
        '<!--<p><label><input type="radio" class="radio" id="downloadable_link_{{id}}_sample_file" name="downloadable[link][{{id}}][sample_type]" value="file" /> File:</label> <input type="file" size="7" name="downloadable[link][{{id}}][sample_file]" value="" class="validate-downloadable-link-sample-file input-file" /></p>-->' +
        '<p><label><input type="radio" class="radio" id="downloadable_link_{{id}}_sample_url" name="downloadable[link][{{id}}][sample_type]" value="url" /> URL</label> <input type="text" class="validate-downloadable-link-sample-url input-text" name="downloadable[link][{{id}}][sample_url]" value="{{sample_url}}" /></p>' +
        '<p><span id="downloadable_link_{{id}}_sample_container"></span></p>' +
    '</td>' +
    '<td class="files">' +
        '<!--<p><label><input type="radio" class="radio validate-one-required-by-name" id="downloadable_link_{{id}}_link_file" name="downloadable[link][{{id}}][link_type]" value="file" /> File:</label> <input type="file" size="7" name="downloadable[link][{{id}}][link_file]" value="" class=" validate-downloadable-fileinput-file" /></p>-->' +
        '<p><label><input type="radio" class="radio validate-one-required-by-name" id="downloadable_link_{{id}}_link_url" name="downloadable[link][{{id}}][link_type]" value="url" /> URL:</label> <input type="text" class="validate-downloadable-url input-text" name="downloadable[link][{{id}}][link_url]" value="{{link_url}}" /></p>' +
        '<p><span id="downloadable_link_{{id}}_link_container"></span></p>' +
    '</td>' +
    '<td class="a-center"><input type="text" name="downloadable[link][{{id}}][sort_order]" value="{{sort_order}}" class="input-text sort" /></td>' +
    '<td>' +
        '<button type="button" class="scalable delete icon-btn delete-link-item"><span>Delete</span></button>' +
    '</td>' +
'</tr>';

var linkItems = {
    tbody : $('link_items_body'),
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : linkTemplate,
    itemCount : 0,
    add : function(data) {
        this.template = new Template(this.templateText, this.templateSyntax);

        if(!data.link_id){
            data = {};
            data.link_id  = 0;
            data.number_of_downloads = '<?php echo $this->getConfigMaxDownloads() ?>';
        }
        data.id = this.itemCount;
        Element.insert(this.tbody, {'bottom':this.template.evaluate(data)});

        scopeTitle = $('downloadable_link_'+data.id+'_title');
        if (scopeTitle) {
        	Event.observe(scopeTitle, 'click', function(event){
                scopeElm = $(Event.findElement(event, 'input'));
        		titleField = scopeElm.up(0).down('input[type="text"]');
                if (titleField.disabled == true) {
                    titleField.disabled = false;
                } else {
                	titleField.disabled = true;
                }
            });
        }
        if (!data.store_title && scopeTitle) {
        	scopeTitle.up(0).down('input[type="text"]').disabled = true;
        	scopeTitle.checked = true;
        }

        scopePrice = $('downloadable_link_'+data.id+'_price');
        if (scopePrice) {
        	Event.observe(scopePrice, 'click', function(event){
                scopeElm = $(Event.findElement(event, 'input'));
                priceField = scopeElm.up(0).down('input[type="text"]');
                if (priceField.disabled == true) {
                    priceField.disabled = false;
                } else {
                    priceField.disabled = true;
                }
            });
        }
        if (!data.website_price && scopePrice) {
        	scopePrice.up(0).down('input[type="text"]').disabled = true;
            scopePrice.checked = true;
        }

        if (data.is_shareable) {
            options = $('downloadable_link _'+data.id+'_shareable').options;
            for (var i=0; i < options.length; i++) {
                if (options[i].value == data.is_shareable) {
                    options[i].selected = true;
                }
            }
        }

//        linkFile = $('downloadable_link_'+data.id+'_link_file');
        linkUrl = $('downloadable_link_'+data.id+'_link_url');
//        linkFile.advaiceContainer = 'downloadable_link_'+data.id+'_link_container';
        linkUrl.advaiceContainer = 'downloadable_link_'+data.id+'_link_container';
        if (data.link_type == 'url') {
            linkUrl.checked = true;
        } else if (data.link_type == 'file') {
            linkFile.checked = true;
        }
        if (data.link_type == 'url') {
            $('downloadable_link_'+data.id+'_sample_url').checked = true;
        } else if (data.link_type == 'file') {
            $('downloadable_link_'+data.id+'_sample_file').checked = true;
        }

        // link sample file
        new Downloadable.FileUploader(
            data.id,
            $('downloadable_link_'+data.id+'_sample_url').up('td'),
            'downloadable[link]['+data.id+'][sample_file]',
            'downloadable_link_'+data.id+'_sample_file'
        );

        // link file
        new Downloadable.FileUploader(
            data.id,
            linkUrl.up('td'),
            'downloadable[link]['+data.id+'][link_file]',
            'downloadable_link_'+data.id+'_link_file'
        );

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));
        if(element){
            element.down('input[type="hidden"].__delete__').value = '1';
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('tbody#link_items_body .delete-link-item');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    }
}

linkItems.bindRemoveButtons();

if($('add_link_item')){
    Event.observe('add_link_item', 'click', linkItems.add.bind(linkItems));
}

<?php foreach ($this->getLinkData() as $item): ?>
    linkItems.add(<?php echo $item->toJson()?>);
<?php endforeach; ?>

Validation.addAllThese([
    ['validate-downloadable-link-sample-file', 'Please specify File.', function(v,element) {
            return true;
        }]
    ]);
Validation.addAllThese([
    ['validate-downloadable-link-sample-url', 'Please specify Sample type.', function(v,element) {
            if (v != '') {
                linkTypeUrl = element.up(0).down('input[value="url"]');
                if (linkTypeUrl.checked) {
                    return true;
                }
                linkTypeFile = element.up(0).down('input[value="file"]');
                //linkTypeFile.down('input[type="text"]').value != ''
                //get flag from uploader
                if (0) {
                    return true;
                }
                return false;
            }
            return true;
        }]
    ]);
//]]>
</script>