<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2009 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * @see Mage_Paypal_Block_System_Config_Fieldset_Global
 */
?>

<table class="paypal-global" id="paypal_checkout" cellspacing="0">
    <col />
    <col width="90" />
    <col width="10" />
    <col width="90" />
    <col width="90" />
    <thead>
        <tr>
            <th class="pg-empty" rowspan="2">&nbsp;</th>
            <th><label for="paypal_global_express_active"><?php echo Mage::helper('paypal')->__('Express Checkout')?></label></th>
            <th class="pg-empty" rowspan="2">&nbsp;</th>
            <th><label for="paypal_global_standard_active"><?php echo Mage::helper('paypal')->__('Standard')?></label></th>
            <th><label for="paypal_global_pro_active"><?php echo Mage::helper('paypal')->__('Pro')?></label></th>
        </tr>
        <tr>
            <th>
                <?php echo $this->getCheckboxHtml('paypal_global_express_active') ?>
                <?php if ($this->canUseInherit('paypal_global_express_active')): ?>
                    <span><?php echo $this->getInheritCheckboxHtml('paypal_global_express_active') ?><?php echo $this->getInheritCheckboxLabelHtml('paypal_global_express_active') ?></span>
                <?php endif; ?>
            </th>
            <th>
                <?php echo $this->getCheckboxHtml('paypal_global_standard_active') ?>
                <?php if ($this->canUseInherit('paypal_global_standard_active')): ?>
                    <span><?php echo $this->getInheritCheckboxHtml('paypal_global_standard_active') ?><?php echo $this->getInheritCheckboxLabelHtml('paypal_global_standard_active') ?></span>
                <?php endif; ?>
            </th>
            <th>
                <?php echo $this->getCheckboxHtml('paypal_global_pro_active') ?>
                <?php if ($this->canUseInherit('paypal_global_pro_active')): ?>
                    <span><?php echo $this->getInheritCheckboxHtml('paypal_global_pro_active') ?><?php echo $this->getInheritCheckboxLabelHtml('paypal_global_pro_active') ?></span>
                <?php endif; ?>
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <?php echo Mage::helper('paypal')->__('Compliments any payment solution')?>
                <p class="paypal-note">(<?php echo Mage::helper('paypal')->__('PayPal Pro, Authorize.net, FirstData, etc.')?>)</p>
            </td>
            <td><span class="pg-tick"></span></td>
            <td class="pg-empty">&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td><?php echo Mage::helper('paypal')->__('Sell now, set up a PayPal account later')?></td>
            <td><span class="pg-tick"></span></td>
            <td class="pg-empty">&nbsp;</td>
            <td><span class="pg-tick"></span></td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td><?php echo Mage::helper('paypal')->__('Accept PayPal payments')?></td>
            <td><span class="pg-tick"></span></td>
            <td class="pg-empty">&nbsp;</td>
            <td><span class="pg-tick"></span></td>
            <td><span class="pg-tick"></span></td>
        </tr>
        <tr>
            <td><?php echo Mage::helper('paypal')->__('Accept credit cards online')?></td>
            <td>&nbsp;</td>
            <td class="pg-empty">&nbsp;</td>
            <td><span class="pg-tick"></span></td>
            <td><span class="pg-tick"></span></td>
        </tr>
        <tr>
            <td>
                <?php echo Mage::helper('paypal')->__('Customers make payments on YOUR site')?>
                <p class="paypal-note">(<?php echo Mage::helper('paypal')->__('Otherwise payments are made on PayPal.com')?>)</p>
            </td>
            <td>&nbsp;</td>
            <td class="pg-empty">&nbsp;</td>
            <td>&nbsp;</td>
            <td><span class="pg-tick"></span></td>
        </tr>
        <tr>
            <td><?php echo Mage::helper('paypal')->__('Credit application required')?></td>
            <td>&nbsp;</td>
            <td class="pg-empty">&nbsp;</td>
            <td>&nbsp;</td>
            <td><span class="pg-tick"></span></td>
        </tr>
        <tr>
            <td class="pg-empty">&nbsp;</td>
            <td><a href="#"><?php echo Mage::helper('paypal')->__('View Demo')?></a> <a href="#"><?php echo Mage::helper('paypal')->__('Learn more')?></a></td>
            <td class="pg-empty">&nbsp;</td>
            <td><a href="#"><?php echo Mage::helper('paypal')->__('View Demo')?></a> <a href="#"><?php echo Mage::helper('paypal')->__('Learn more')?></a></td>
            <td><a href="#"><?php echo Mage::helper('paypal')->__('View Demo')?></a> <a href="#"><?php echo Mage::helper('paypal')->__('Learn more')?></a></td>
        </tr>
    </tbody>
</table>
<p class="pg-options"><a href="#">Print</a>&nbsp;|&nbsp;<a href="#">Email</a> this table</p>

<script type="text/javascript">
decorateTable('paypal_checkout');

Event.observe(window, 'load', function() {
    var pConfig = new PaypalConfig;
    Element.observe('paypal_general_merchant_country', 'change', pConfig.trackPayflowEnabled.bind(pConfig));
    Element.observe('paypal_general_use_payflow', 'change', pConfig.trackPayflowEnabled.bind(pConfig));
    pConfig.trackPayflowEnabled();

    Element.observe('paypal_global_express_active', 'click', pConfig.toggleFieldset.bind(pConfig, 'paypal_express', 'paypal_global_express_active'));
    Element.observe('paypal_global_standard_active', 'click', pConfig.toggleFieldset.bind(pConfig, 'paypal_standard', 'paypal_global_standard_active'));
    Element.observe('paypal_global_pro_active', 'click', pConfig.toggleFieldset.bind(pConfig, 'paypal_pro', 'paypal_global_pro_active'));
    if (!$('paypal_global_express_active').checked) {
        pConfig.toggleFieldset('paypal_express', 'paypal_global_express_active');
    }
    if (!$('paypal_global_standard_active').checked) {
        pConfig.toggleFieldset('paypal_standard', 'paypal_global_standard_active');
    }
    if (!$('paypal_global_pro_active').checked) {
        pConfig.toggleFieldset('paypal_pro', 'paypal_global_pro_active');
    }
});

PaypalConfig = Class.create();
PaypalConfig.prototype = {
    initialize: function(){},

    trackPayflowEnabled: function()
    {
        var usePayflow = $('paypal_general_merchant_country') != undefined
            && $('paypal_general_merchant_country').value == 'GB'
            && $('paypal_general_use_payflow') != undefined
            && $('paypal_general_use_payflow').value == '1';
        var payflowRows = [
            'row_paypal_pro_heading_payflow',
            'row_paypal_pro_partner',
            'row_paypal_pro_user',
            'row_paypal_pro_vendor',
            'row_paypal_pro_pwd'
        ];
        var notPayflowRows = [
            'row_paypal_general_heading_api',
            'row_paypal_general_api_username',
            'row_paypal_general_api_password',
            'row_paypal_general_api_signature',
            'row_paypal_general_use_proxy'
        ];
        if (usePayflow) {
            payflowRows.each(function(e) {
                this.enableRow(e);
            }.bind(this));
            notPayflowRows.each(function(e) {
                this.disableRow(e);
            }.bind(this));
        } else {
            payflowRows.each(function(e) {
                this.disableRow(e);
            }.bind(this));
            notPayflowRows.each(function(e) {
                this.enableRow(e);
            }.bind(this));
        }
    },

    enableRow: function(rowId)
    {
        $(rowId).select('input','select').each(function(e) {
            e.disabled = false;
        });
        $(rowId).show();
    },

    disableRow: function(rowId)
    {
        $(rowId).select('input','select').each(function(e) {
            e.disabled = true;
        });
        $(rowId).hide();
    },

    toggleFieldset: function(fieldset, checkbox)
    {
        var isHidden = !$(checkbox).checked;
        toggleValueElements(checkbox, fieldset, [], isHidden);
        isHidden ? $(fieldset).hide() : $(fieldset).show();
        var heading = $(fieldset).previous('div');
        var headingLink = heading.down('a');
        isHidden ? heading.addClassName('disabled') : heading.removeClassName('disabled');
        if (isHidden) {
            headingLink.oldHref = headingLink.href;
            headingLink.oldOnclick = headingLink.onclick;
            headingLink.onclick = "return false;";
            headingLink.href = "javascript:void(0)";
        } else {
            headingLink.onclick = headingLink.oldOnclick;
            headingLink.href = headingLink.oldHref;
        }
    }
}
</script>
