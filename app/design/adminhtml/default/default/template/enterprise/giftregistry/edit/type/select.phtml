<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2009 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>

<script type="text/javascript">
//<![CDATA[
OptionTemplateSelect =
	'<table class="border" cellpadding="0" cellspacing="0">'+
        '<input type="hidden" class="required-option-select-type-rows" name="validation_{{option_id}}_result" value="" >'+
        '<thead>'+
        '<tr class="headings">'+
            '<th class="type-title"><?php echo Mage::helper('enterprise_giftregistry')->__('Code') ?> <span class="required">*</span></th>'+
            '<th class="type-title"><?php echo Mage::helper('enterprise_giftregistry')->__('Title') ?> <span class="required">*</span></th>'+
            '<th class="type-price"><?php echo Mage::helper('enterprise_giftregistry')->__('Is Default') ?></th>'+
            '<th class="type-order"><?php echo Mage::helper('enterprise_giftregistry')->__('Sort Order') ?></th>'+
            '<th class="type-butt last">&nbsp;</th>'+
        '</tr>'+
        '</thead>'+
        '<tbody id="select_option_type_row_{{option_id}}"></tbody>'+
        '<tfoot>'+
            '<tr><td colspan="10" class="a-right"><?php echo $this->getAddButtonHtml() ?></td></tr>'+
        '</tfoot>'+
    '</table>';

OptionTemplateSelectRow =
	'<tr id="attribute_{{id}}_select_{{select_id}}">'+
	   '<td>'+
        '<input type="hidden" name="attribute[{{id}}][options][{{select_id}}][option_type_id]" value="{{option_type_id}}">'+
        '<input type="text" class="required-entry input-text select-type-code" id="attribute_{{id}}_select_{{select_id}}_title" name="attribute[{{id}}][options][{{select_id}}][code]" value="{{code}}">{{checkboxScopeTitle}}</td>'+
        '<td><input type="text" class="required-entry input-text" id="attribute_{{id}}_select_{{select_id}}_title" name="attribute[{{id}}][options][{{select_id}}][title]" value="{{title}}">{{checkboxScopeTitle}}</td>'+
        '<td><input type="radio" class="input-text" id="attribute_{{id}}_select_{{select_id}}_title" name="attribute[{{id}}][options][{{select_id}}][default]" value="{{select_id}}" {{checked}}></td>'+
        '<td><input type="text" class="validate-zero-or-greater input-text" name="attribute[{{id}}][options][{{select_id}}][sort_order]" value="{{sort_order}}"></td>'+
        '<td class="last"><span title="<?php echo Mage::helper('enterprise_giftregistry')->__('Delete Option') ?>"><?php echo $this->getDeleteButtonHtml() ?></span></td>'+
    '</tr>';

selectOptionType = {
    div : 'select_option_type_row',
    itemCount : 0,
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : OptionTemplateSelectRow,
    add : function(data) {

        this.template = new Template(this.templateText, this.templateSyntax);

        if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
            element = $(Event.findElement(data, 'button'));
            optionId = element.readAttribute('id').sub('add_select_row_button_', '');
            data = {};
            data.option_type_id = '-1';
            data.select_id = this.itemCount;
        } else {
            optionId = data.option_id;
            data.select_id = data.option_type_id;
            this.itemCount = data.item_count;
        }

        data.id  = optionId;
        Element.insert($(this.div+'_'+data.id), {'bottom':this.template.evaluate(data)});

        if (data.checkboxScopeTitle) {
            if ($('attribute_'+data.id+'_select_'+data.select_id+'_title') && data.scopeTitleDisabled) {
                $('attribute_'+data.id+'_select_'+data.select_id+'_title').disable();
            }
        }

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));

        if(element){
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('.delete-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    },
    bindAddButton : function()
    {
        var buttons = $$('.add-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.add.bind(this));
            }
        }
    }
}

if ($('option_panel_type_select')) {
    $('option_panel_type_select').remove();
}

selectOptionType.bindRemoveButtons();

Validation.addAllThese([
    ['required-option-select-type-rows',
     '<?php echo Mage::helper('enterprise_giftregistry')->__('Please add options to select input element.') ?>',
     function(v, elm) {
            var optionContainerElm = elm.up('div.grid');
            var selectTypesFlag = false;
            selectTypeElements = $$('#'+optionContainerElm.id+' .select-type-code');
            selectTypeElements.each(function(elm){
                if (elm.id && elm.up('tr').visible()) {
                    selectTypesFlag = true;
                }
            });
            elm.advaiceContainer = optionContainerElm.id+'_advice';
        return selectTypesFlag;
}]]);

if($('add_select_row_button')){
    Event.observe('add_select_row_button', 'click', selectOptionType.add.bind(selectOptionType));
}
//]]>
</script>
