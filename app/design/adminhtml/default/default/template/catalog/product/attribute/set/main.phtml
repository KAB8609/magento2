<div class="content-header">
    <table cellspacing="0" class="grid-header">
    	<tr>
    		<td style="width:50%;"><h3><?=$this->_getHeader()?></h3></td>
        	<td class="form-buttons">
                <?=$this->getBackButtonHtml()?>
                <?=$this->getResetButtonHtml()?>
                <?=$this->getDeleteButtonHtml()?>
                <?=$this->getSaveButtonHtml()?>
        	</td>
    	</tr>
    </table>
</div>
<table cellspacing="0" width="100%">
    <tr>
        <td style="border-right:2px solid #d5dbe1;padding-right:20px;width:300px;">
            <?=$this->getSetFormHtml()?>
        </td>
        <td style="border-right:2px solid #d5dbe1;padding-left:20px;width:320px;">
            <div class="content-header left-col-block" style="width:300px;">
                <table class="grid-header" cellspacing="0">
                    <tbody>
                        <tr>
                            <td><h3><?=__('Groups')?></h3></td>
                            <td class="a-right">&nbsp;<?=$this->getAddGroupButton()?>&nbsp;<?=$this->getDeleteGroupButton()?></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <?=$this->getSetsFilterHtml()?>
            <?=$this->getGroupTreeHtml()?>
        </td>
        <td style="padding-left:20px;">
            <div class="content-header left-col-block" style="width:280px;height:30px;">
                <table class="grid-header" cellspacing="0">
                    <tbody>
                        <tr>
                            <td><h3><?=__('Not Assigned Attributes')?></h3></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="tree-div2" style="width:190px;height:400px;"></div>
            <script type="text/javascript">
            var TreePanels = function() {
                // shorthand
                var Tree = Ext.tree;

                return {
                    init : function(){
                        // yui-ext tree

                        var tree = new Ext.tree.TreePanel('tree-div1', {
                            animate:false,
                            loader: false,
                            enableDD:true,
                            containerScroll: true,
                            rootVisible: false
                        });

                        // set the root node
                        this.root = new Ext.tree.TreeNode({
                            text: 'ROOT',
                            allowDrug:false,
                            allowDrop:false,
                            id:'1'
                        });
                        tree.setRootNode(this.root);
                        buildCategoryTree(this.root, <?=$this->getGroupTreeJson()?>);
                        // set handlers
                        tree.addListener('insert', TreePanels.attributeMove.createDelegate(this));
                        tree.addListener('append', TreePanels.attributeMove.createDelegate(this));
                        tree.addListener('remove', TreePanels.attributeMove.createDelegate(this));

                        // render the tree
                        tree.render();
                        this.root.expand(false, false);
                        tree.expandAll();
                        //-------------------------------------------------------------

                        var tree2 = new Ext.tree.TreePanel('tree-div2', {
                            animate:false,
                            loader: false,
                            enableDD:true,
                            containerScroll: true,
                            rootVisible: false,
                            lines:false,
                        });

                        // set the root node
                        this.root2 = new Ext.tree.TreeNode({
                            text: 'ROOT',
                            draggable:false,
                            id:'free'
                        });
                        tree2.setRootNode(this.root2);
                        buildCategoryTree(this.root2, <?=$this->getAttributeTreeJson()?>);
                        // set handlers
                        tree2.addListener('append', editSet.rightAppend.createDelegate(this));
                        tree2.addListener('insert', TreePanels.attributeRemove.createDelegate(this));
                        tree2.addListener('remove', TreePanels.attributeRemove.createDelegate(this));

                        // render the tree
                        tree2.render();
                        this.root2.expand(false, false);
                        tree2.expandAll();
                    },

                    attributeMove : function(obj){
                        editSet.req.attributes = new Array();
                        rootNode = obj.getRootNode();

                        for( i in rootNode.childNodes ) {
                            if(rootNode.childNodes[i].id) {
                                var group = rootNode.childNodes[i];
                                if(group.childNodes) {
                                    var iterator = 0
                                    for( j in group.childNodes ) {
                                        iterator ++;
                                        if( group.childNodes[j].id > 0 ) {
                                            editSet.req.attributes[group.childNodes[j].id] = new Array(group.childNodes[j].id, group.id, iterator);
                                        }
                                    }
                                    iterator = 0;
                                }
                            }
                        }
                    },

                    attributeRemove : function(obj){
                        editSet.req.not_attributes = new Array();
                        rootNode = obj.getRootNode();

                        var iterator = 0;
                        for( i in rootNode.childNodes ) {
                            if(rootNode.childNodes[i].id) {
                                if( rootNode.childNodes[i].id > 0 ) {
                                    editSet.req.not_attributes[iterator] = rootNode.childNodes[i].id;
                                }
                                iterator ++;
                            }
                        }

                        if( !rootNode.childNodes.length && obj.rootVisible == false ) {
                            var newNode = new Ext.tree.TreeNode({
                                    text : '<?=__('Empty')?>',
                                    id : 'empty',
                                    cls : 'folder',
                                    allowDrop : false,
                                    allowDrag : false
                                });
                            obj.getRootNode().appendChild(newNode);
                        }
                    }

                };
            }();

            function buildCategoryTree(parent, config){
                if (!config) return null;
            	if (parent && config && config.length){
                    for (var i = 0; i < config.length; i++) {
                        var node = new Ext.tree.TreeNode(config[i]);
                        parent.appendChild(node);
                        node.addListener('click', editSet.register);
                        if( config[i].children ) {
                            for( j in config[i].children ) {
                                if(config[i].children[j].id) {
                                    newNode = new Ext.tree.TreeNode(config[i].children[j]);
                                    node.appendChild(newNode);
                                    newNode.addListener('click', editSet.unregister);
                                }
                            }
                        }
                    }
                }
            }

            var editSet = function() {
                return {
                    register : function(node) {
                        editSet.currentNode = node;
                    },

                    unregister : function(node) {
                        editSet.currentNode = null;
                    },

                    submit : function() {
                        if( editSet.currentNode ) {
                            editSet.currentNode.parentNode.removeChild(editSet.currentNode);
                            editSet.req.removeGroups[editSet.currentNode.id] = editSet.currentNode.id;
                        }
                    },

                    rightAppend : function(node) {
                        //TreePanels.root2.removeChild(TreePanels.root2.findChild('id', 'empty'));
                    },

                    addGroup : function() {
                        var group_name = prompt("<?=__('Please Enter New Group Name')?>","");

                        if( group_name == '' ) {
                            this.addGroup();
                        } else if( group_name != false && group_name != null && group_name != '' ) {
                            var newNode = new Ext.tree.TreeNode({
                                    text : group_name,
                                    cls : 'folder',
                                    allowDrop : true,
                                    allowDrag : false
                                });
                            TreePanels.root.appendChild(newNode);
                            newNode.addListener('click', editSet.register);
                            editSet.req.addGroups.push( new Array(newNode.id, group_name) );
                        }
                    },

                    save : function() {
                        editSet.req.attribute_set_name = $('attribute_set_name').value;
                        var req = {data : Ext.util.JSON.encode(editSet.req)};
                        var con = new Ext.lib.Ajax.request('POST', '<?=$this->getMoveUrl()?>', {success:editSet.success,failure:editSet.failure}, req);
                    },

                    success : function(o) {
                        initVars();
                        window.location.reload();
                    },

                    failure : function(o) {
                        //
                    }
                }
            }();

            function initVars() {
                editSet.req = {};
                editSet.req.attributes = false;
                editSet.req.not_attributes = false;
                editSet.req.attribute_set_name = false;
                editSet.req.removeGroups = new Array();
                editSet.req.addGroups = new Array();
            }


            initVars();
            Ext.EventManager.onDocumentReady(TreePanels.init, TreePanels, true);
            </script>
        </td>
    </tr>
</table>