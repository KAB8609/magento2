<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * @category   design_default
 * @package    Mage
 * @copyright  Copyright (c) 2004-2007 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<script type="text/javascript">

var OptionTemplateSelect = '<table class="dynamic-grid" cellpadding="0" cellspacing="0">'+
        '<tr id="select_option_type_row_{{option_id}}">'+
            '<th><?php echo Mage::helper('catalog')->__('Title') ?> <span class="required">*</span></th>'+
            '<th><?php echo Mage::helper('catalog')->__('Price') ?> <span class="required">*</span></th>'+
            '<th><?php echo Mage::helper('catalog')->__('Price Type') ?></th>'+
            '<th><?php echo Mage::helper('catalog')->__('SKU') ?> <span class="required">*</span></th>'+
            '<th><?php echo Mage::helper('catalog')->__('Sort Order') ?></th>'+
            '<th><?php echo $this->getAddButtonHtml() ?></th>'+
        '</tr>'+
    '</table>';

var OptionTemplateSelectRow = '<tr id="product_option_{{id}}_select_{{select_id}}">'+
            '<input type="hidden" name="product[options][{{id}}][values][{{select_id}}][option_type_id]" value="{{option_type_id}}">'+
            '<input type="hidden" id="product_option_{{id}}_select_{{select_id}}_is_delete" name="product[options][{{id}}][values][{{select_id}}][is_delete]" value="">'+
            '<td><input type="text" class="required-entry" id="product_option_{{id}}_select_{{select_id}}_title" name="product[options][{{id}}][values][{{select_id}}][title]" value="{{title}}">{{checkboxScopeTitle}}</td>'+
            '<td><input type="text" class="required-entry validate-zero-or-greater product-option-price" id="product_option_{{id}}_select_{{select_id}}_price" name="product[options][{{id}}][values][{{select_id}}][price]" value="{{price}}"></td>'+
            '<td><?php echo $this->getPriceTypeSelectHtml() ?>{{checkboxScopePrice}}</td>'+
            '<td><input type="text" class="required-entry" name="product[options][{{id}}][values][{{select_id}}][sku]" value="{{sku}}"></td>'+
            '<td><input type="text" class="validate-zero-or-greater" name="product[options][{{id}}][values][{{select_id}}][sort_order]" value="{{sort_order}}"></td>'+
            '<td><?php echo $this->getDeleteButtonHtml() ?></td>'+
        '</tr>';

var selectOptionType = {
    div : 'select_option_type_row',
    countItem : 0,
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : OptionTemplateSelectRow,
    add : function(data) {

        this.template = new Template(this.templateText, this.templateSyntax);

//        if (data instanceof Event) {
        if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
            element = $(Event.element(data));
            optionId = element.readAttribute('id').sub('add_select_row_button_', '');
            data = {};
            data.option_type_id = '-1';
            data.select_id = this.countItem;
        } else {
            optionId = data.option_id;
            data.select_id = data.option_type_id;
            this.countItem = data.option_type_id;
        }

        data.id  = optionId;

        new Insertion.After(
				$(this.div+'_'+data.id),
				this.template.evaluate(data)
			);

		if (data.checkboxScopeTitle) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_title') && data.scopeTitleDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_title').disable();
            }
		}
		if (data.checkboxScopePrice) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_price') && data.scopePriceDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_price').disable();
                $('product_option_'+data.id+'_select_'+data.select_id+'_price_type').disable();
            }
		}

		if (data.price_type) {
            $A($('product_option_'+data.id+'_select_'+data.select_id+'_price_type').options).each(function(option){
                if (option.value==data.price_type) option.selected = true;
            });
	    }

	    this.countItem++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));

        if(element){
            $(element.readAttribute('id')+'_is_delete').value = '1';
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('.delete-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    },
    bindAddButton : function()
    {
        var buttons = $$('.add-select-row-psw');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.add.bind(this));
            }
        }
    }
}

if ($('option_panel_type_select')) {
    $('option_panel_type_select').remove();
}

selectOptionType.bindRemoveButtons();

if($('add_select_row_button')){
    Event.observe('add_select_row_button', 'click', selectOptionType.add.bind(selectOptionType));
}
</script>