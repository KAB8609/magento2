
<div class="content-header">
<table cellspacing="0" class="grid-header"> 
    <tr>
        <td style="width:30%;"><h3><?=$this->getHeader()?></h3></td>
        <td class="a-right">
            <?=$this->getResetButtonHtml()?>
            <?if($this->getCategoryId()):?>
                    <?=$this->getDeleteButtonHtml()?>
            <?endif;?>
            <?=$this->getSaveButtonHtml()?>
        </td>
    </tr>
</table>
</div>
<?if($this->hasStoreRootCategory()):?>
    <?=$this->getTabsHtml()?>
    <form id="category_edit_form" action="<?=$this->getSaveUrl()?>" method="POST" enctype="multipart/form-data">
    <input type="hidden" name="category_products" id="in_category_products" value=""/>
    <div id="category_tab_content"></div>
    </form>
    
<script type="text/javascript" language="javascript">
    var categoryForm = new varienForm('category_edit_form');
    
    function categoryDelete(){
        if(confirm('<?=__('Are you sure?')?>')){
            location.href = '<?=$this->getDeleteUrl()?>'
        }
    }
<?if($_gridJsObject=$this->getLayout()->getBlock('category.product.grid')->getJsObjectName()):?>
    var categoryProducts = $H(<?=$this->getProductsJson()?>);
    $('in_category_products').value = categoryProducts.toQueryString();
    
    function registerCategoryProduct(grid, element, checked){
        if(checked){
            if(element.positionElement){
                element.positionElement.disabled = false;
                categoryProducts[element.value] = element.positionElement.value;
            }
        }
        else{
            if(element.positionElement){
                element.positionElement.disabled = true;
            }
            categoryProducts.remove(element.value);
        }
        $('in_category_products').value = categoryProducts.toQueryString();
        grid.reloadParams = {'selected_products[]':categoryProducts.keys()};
    }
    function categoryProductRowClick(grid, event){
        var trElement = Event.findElement(event, 'tr');
        var isInput   = Event.element(event).tagName == 'INPUT';
        if(trElement){
            var checkbox = Element.getElementsBySelector(trElement, 'input');
            if(checkbox[0]){
                var checked = isInput ? checkbox[0].checked : !checkbox[0].checked;
                <?=$_gridJsObject?>.setCheckboxChecked(checkbox[0], checked);
            }
        }
    }
    function positionChange(event){
        var element = Event.element(event);
        if(element && element.checkboxElement && element.checkboxElement.checked){
            categoryProducts[element.checkboxElement.value] = element.value;
            $('in_category_products').value = categoryProducts.toQueryString();
        }
    }
    
    var tabIndex = 1000;
    function categoryProductRowInit(grid, row){
        var checkbox = $(row).getElementsByClassName('checkbox')[0];
        var position = $(row).getElementsByClassName('input-text')[0];
        if(checkbox && position){
            checkbox.positionElement = position;
            position.checkboxElement = checkbox;
            position.disabled = !checkbox.checked;
            position.tabIndex = tabIndex++;
            Event.observe(position,'keyup',positionChange);
        }
    }
    <?=$_gridJsObject?>.rowClickCallback = categoryProductRowClick;
    <?=$_gridJsObject?>.initRowCallback = categoryProductRowInit;
    <?=$_gridJsObject?>.checkboxCheckCallback = registerCategoryProduct;
    <?=$_gridJsObject?>.rows.each(function(row){categoryProductRowInit(<?=$_gridJsObject?>, row)});
<?endif;?>
</script>
    
<?else:?>
<div class="messages warning-msg">
    <?=__('Set root category for this store in')?> <a href="<?=$this->getStoreConfigurationUrl()?>"><?=__('configuration')?></a>
</div>
<?endif;?>