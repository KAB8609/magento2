<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * @category   design_default
 * @package    Mage
 * @copyright  Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php
/**
 * Template for Mage_Adminhtml_Block_Catalog_Category_Cointainer
 */
?>

<div id="category-edit-container" class="category-content">
    <?php echo $this->getChildHtml('form') ?>
</div>
<script type="text/javascript">
//<![CDATA[
    var categoryForm = new varienForm('category_edit_form');

    function updateContent(url, params, noLoader){
        var categoryContainer = $('category-edit-container');
        new Ajax.Updater(
            categoryContainer,
            url + (url.match(new RegExp('\\?')) ? '&isAjax=true' : '?isAjax=true' ),
            {
               parameters:  params || {},
               method:      'post',
               loaderArea:  noLoader?false:categoryContainer,
               onComplete:  refreshEditArea.bind(this),
               evalScripts: true
            }
        );
    }

    function refreshEditArea(transport){}

    function categorySubmit(url, useAjax){
        if (!useAjax) {
            categoryForm.submit();
            return;
        }

        var params = {};
        var fields = $('category_edit_form').getElementsBySelector('input', 'select');
        for(var i=0;i<fields.length;i++){
            if (!fields[i].name) {
                continue;
            }
            params[fields[i].name] = fields[i].getValue();
        }

        if (tree && tree.addingTo) {
            var parent = tree.getNodeById(tree.currentNodeId);
            var node = new Ext.tree.TreeNode();
        }
        if (tree && tree.storeId==0 && !tree.addingTo) {
            var currentNode = tree.getNodeById(tree.currentNodeId);
            if (currentNode) {
                if (params['general[is_active]']) {
                    var oldClass = 'no-active-category';
                    var newClass = 'active-category';
                } else {
                    var oldClass = 'active-category';
                    var newClass = 'no-active-category';
                }
                currentNode.ui.wrap.firstChild.removeClassName(oldClass);
                currentNode.ui.wrap.firstChild.addClassName(newClass);
                var name = currentNode.text;
                if (!name.match(/(\(\d+\))/)) {
                   name = params['general[name]'];
                } else {
                    name = name.replace(/(.+)\(/,params['general[name]']+' (');
                }
                currentNode.setText(name);
            }
        }


        updateContent(url, params);
    }
//]]>
</script>