<div class="head">
    <h2>Customers</h2>
</div>
<div class="x-box-blue">
    <div class="x-box-tl"><div class="x-box-tr"><div class="x-box-tc"></div></div></div>
    <div class="x-box-ml"><div class="x-box-mr"><div class="x-box-mc">
        <div id="customer-grid" style="height: 450px;"></div>
    </div></div></div>
    <div class="x-box-bl"><div class="x-box-br"><div class="x-box-bc"></div></div></div>
</div>
<script type="text/javascript" language="javascript">
    var customerDataRecord = Ext.data.Record.create([
        {name: 'customer_id', mapping: 'customer_id'},
        {name: 'email', mapping: 'email'},
        {name: 'firstname', mapping: 'firstname'},
        {name: 'lastname', mapping: 'lastname'}
    ]);

    var dataReader = new Ext.data.JsonReader({
        root: 'items',
        totalProperty: 'totalRecords',
        id: 'customer_id'
    }, customerDataRecord);

    var dataStore = new Ext.data.Store({
        proxy: new Ext.data.HttpProxy({url: '/admin/customer/gridData/'}),
        reader: dataReader,
        remoteSort: true
    });
    
    dataStore.setDefaultSort('customer_id', 'desc');
    
    var colModel = new Ext.grid.ColumnModel([
        {header: "ID#", sortable: true, locked:false, dataIndex: 'customer_id'},
        {header: "Email", sortable: true, dataIndex: 'email'},
        {header: "Firstname", sortable: true, dataIndex: 'firstname'},
        {header: "Lastname", sortable: true, dataIndex: 'lastname'}
    ]);

    var rowSelector = new Ext.grid.RowSelectionModel({singleSelect : true});

    var grid = new Ext.grid.Grid(document.getElementById('customer-grid'), {
        ds: dataStore,
        cm: colModel,
        autoSizeColumns : true,
        monitorWindowResize : true,
        autoHeight : true,
        loadMask: true,
        selModel : rowSelector,
        enableColLock : false
    });
    
    //grid.getSelectionModel().on('rowselect', this.loadCustomer, this);

    var rz = new Ext.Resizable(document.getElementById('customer-grid'), {
        wrap:true,
        minHeight:100,
        pinned:true,
        handles: 's'
    });
    
    rz.on('resize', grid.autoSize, grid);
    grid.render();
    var gridFoot = grid.getView().getFooterPanel(true);

    // add a paging toolbar to the grid's footer
    var paging = new Ext.PagingToolbar(gridFoot, dataStore, {
        pageSize: 25,
        displayInfo: true,
        displayMsg: 'Displaying topics {0} - {1} of {2}',
        emptyMsg: "No topics to display"
    });
    // add the detailed view button
    paging.add('-', {
        pressed: true,
        enableToggle:true,
        text: 'Detailed View',
        cls: 'x-btn-text-icon details',
        toggleHandler: toggleDetails
    });

    // trigger the data store load
    dataStore.load({params:{start:0, limit:25}});

    function toggleDetails(btn, pressed){
        cm.getColumnById('topic').renderer = pressed ? renderTopic : renderTopicPlain;
        cm.getColumnById('last').renderer = pressed ? renderLast : renderLastPlain;
        grid.getView().refresh();
    }
</script>
