<?php
/**
 * {license_notice}
 *
 * @category    Saas
 * @package     Saas_PrintedTemplate
 * @copyright   {copyright}
 * @license     {license_link}
 */
?>

<?php
/**
 * @var Saas_PrintedTemplate_Block_Widget_Field_Backend_Columns $this
 */
?>
<?php
$_htmlId = $this->getHtmlId() ? $this->getHtmlId() : '_' . uniqid();
$_arrayRows = $this->getArrayRows();
$_colspan = ($this->getIsAddAfter()) ? 'colspan="2"' : '';
?>

<style type="text/css">
    .items-grid-widget-columns-table {margin-top: 7px; max-width: 876px;}
    .items-grid-widget-columns-table td {padding: 8px 5px 5px 5px !important; vertical-align: top;}
    .items-grid-widget-columns-table td .validation-advice {margin-left: 0;}
    .items-grid-widget-columns-table .select {padding: 5px 10px; box-shadow: 0 3px 6px #DADADA;}
    .items-grid-widget-columns-table .input-text {margin-top: 1px; padding: 5px 10px !important; box-shadow: 0 3px 6px #DADADA;}
</style>

<div class="grid" id="grid<?php echo $_htmlId ?>">
    <table class="items-grid-widget-columns-table" cellpadding="0" cellspacing="0" class="border">
        <tbody>

            <tr class="headings" id="headings<?php echo $_htmlId ?>">
<?php foreach ($this->getColumns() as $columnName => $column) : ?>
                <th><?php echo $this->escapeHtml($column['label']) ?></th>
<?php endforeach; ?>
                <th <?php echo $_colspan?>></th>
            </tr>

            <tr id="addRow<?php echo $_htmlId ?>">
                <td colspan="<?php echo count($this->getColumns()) ?>"></td>
                <td <?php echo $_colspan?>>
                    <button style="" onclick="" class="scalable add" type="button" id="addToEndBtn<?php echo $_htmlId ?>"><span><span><span><?php echo $this->escapeHtml($this->getAddButtonLabel()) ?></span></span></span></button>
                </td>
            </tr>
        </tbody>
    </table>
    <input type="hidden" name="<?php echo $this->getElement()->getName() ?>[__empty]" value="" />
    <input id="parameter_type" type="hidden" name="parameters[entity]" value="" />
    <input id="itemsgrid_columns_encoded" type="hidden" name="parameters[columns_editor]" value="xxx">
</div>
<div id="empty<?php echo $_htmlId ?>" style="margin-top: 7px;">
    <button style="" onclick="" class="scalable add" type="button" id="emptyAddBtn<?php echo $_htmlId ?>"><span><span><span><?php echo $this->escapeHtml($this->getAddButtonLabel()) ?></span></span></span></button>
</div>

<script type="text/javascript">
//<![CDATA[
if (window.printedTemplateType === undefined) {
    $('widget_options_saas_printedtemplate_widget_itemsGrid').innerHTML =
        '<ul id="printedtemplate_widget_warning" class="messages"><li class="error-msg"><ul><li><?php echo $this->jsQuoteEscape($this->__("This widget is available only for printed templates.")) ?></li></ul></li></ul>';
} else {

$('parameter_type').value = "$" + printedTemplateType;

$('insert_button').setAttribute('onclick', " $('itemsgrid_columns_encoded').value = encode_base64(Form.serializeElements($$('.items-grid-field'))); " + $('insert_button').getAttribute('onclick'));

//create row creator
var arrayRow<?php echo $_htmlId ?> = {
    // define row prototypeJS template
    template : function()
    {
        var optionSelectCode = [];
        optionSelectCode['<?php echo Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_INVOICE ?>'] =
                '<?php echo $this->renderOptionSelect(Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_INVOICE) ?>';
        optionSelectCode['<?php echo Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_CREDITMEMO ?>'] =
                '<?php echo $this->renderOptionSelect(Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_CREDITMEMO) ?>';
        optionSelectCode['<?php echo Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_SHIPMENT ?>'] =
                '<?php echo $this->renderOptionSelect(Saas_PrintedTemplate_Model_Template::ENTITY_TYPE_SHIPMENT) ?>';

        return new Template(
        '<tr id="#{_id}">'
<?php foreach ($this->getColumns() as $columnName => $column):?>
    <?php if ($columnName == 'option'): ?>
            +'<td>'
                + optionSelectCode[printedTemplateType]
            +'<\/td>'
    <?php else: ?>
            +'<td>'
                +'<?php echo $this->renderCellTemplate($columnName)?>'
            +'<\/td>'
    <?php endif; ?>
<?php endforeach;?>
<?php if ($this->getIsAddAfter()) : ?>
            +'<td><button onclick="" class="scalable add" type="button" id="addAfterBtn#{_id}"><span><span><span><?php echo $this->jsQuoteEscape($this->__('Add after')) ?><\/span><\/span><\/span><\/button><\/td>'
<?php endif;?>
            +'<td><button onclick="" class="scalable delete" type="button" id="deleteBtn#{_id}"><span><span><span><?php echo $this->jsQuoteEscape($this->__('Delete')) ?><\/span><\/span><\/span><\/button><\/td>'
        +'<\/tr>'
        )
    },

    rowsCount : 0,

    add : function(templateData, insertAfterId)
    {
        // generate default template data
        if ('' == templateData) {
            var d = new Date();
            var templateData = {
<?php foreach ($this->getColumns() as $columnName => $column):?>
                <?php echo $columnName ?> : '',
<?php endforeach;?>
                _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        // insert before last row
        if ('' == insertAfterId) {
            Element.insert($('addRow<?php echo $_htmlId ?>'), {before: this.template().evaluate(templateData)});
        }
        // insert after specified row
        else {
            Element.insert($(insertAfterId), {after: this.template().evaluate(templateData)});
        }
        if (typeof(templateData.property) != 'undefined') {
            $('printedtemplate_property_'+templateData._id).value = templateData.property;
        }
<?php if ($this->getIsAddAfter()) : ?>
        Event.observe('addAfterBtn' + templateData._id, 'click', this.add.bind(this, '', templateData._id));
<?php endif; ?>
        Event.observe('deleteBtn' + templateData._id, 'click', this.del.bind(this, templateData._id, templateData._id));

        this.rowsCount += 1;
    },

    del : function(rowId)
    {
        $(rowId).remove();
        this.rowsCount -= 1;
        if (0 == this.rowsCount) {
            this.showButtonOnly();
        }
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $_htmlId ?>').hide();
        $('empty<?php echo $_htmlId ?>').show();
    }
}

// bind add action to "Add" button in last row
Event.observe('addToEndBtn<?php echo $_htmlId ?>', 'click', arrayRow<?php echo $_htmlId ?>.add.bind(arrayRow<?php echo $_htmlId ?>, '', ''));

// add existing rows
<?php
$_addAfterId = "headings{$_htmlId}";
foreach ($_arrayRows as $_rowId => $_row) {
    echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ", '{$_addAfterId}');\n";
    $_addAfterId = $_rowId;
}
?>

// initialize standalone button
$('empty<?php echo $_htmlId ?>').hide();
Event.observe('emptyAddBtn<?php echo $_htmlId ?>', 'click', function () {
    $('grid<?php echo $_htmlId ?>').show();
    $('empty<?php echo $_htmlId ?>').hide();
    arrayRow<?php echo $_htmlId ?>.add('', '');
});

// if no rows, hide grid and show button only
<?php if (empty($_arrayRows)):?>
arrayRow<?php echo $_htmlId ?>.showButtonOnly();
<?php endif;?>

// toggle the grid, if element is disabled (depending on scope)
<?php if ($this->getElement()->getDisabled()):?>
toggleValueElements({checked:true}, $('grid<?php echo $_htmlId ?>').parentNode);
<?php endif;?>
}
//]]>
</script>

