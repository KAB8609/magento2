<?php
/**
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
?>
<?php
/**
 * @var $this Saas_Index_Block_Backend_Index
 */
?>

<div <?php echo $this->getUiId('content-header') ?>><?php echo $this->getButtonsHtml('refresh') ?></div>
<?php echo $this->getChildHtml('refresh.index.status'); ?>
<script type="text/javascript">
    var goIndex = {
        checkTime: <?php echo $this->getTaskCheckTime()?>,
        isTaskAdded: <?php echo $this->isTaskAdded() ? 1 : 0?>,
        refreshBtn: jQuery('#refresh_index'),
        cancelBtn: jQuery('#cancel_index'),
        intervalId: null,

        /**
         * Update html block for index status
         *
         * @param html
         */
        updateStatusHtml: function (html) {
            jQuery('#index-status').replaceWith(html);
            this.cancelBtn = jQuery('#cancel_index');
        },

        /**
         * Disable button
         *
         * @param btn
         */
        disableBtn: function (btn) {
            btn.attr('disabled', 'disabled').addClass('disabled');
        },

        /**
         * Enable button
         *
         * @param btn
         */
        enableBtn: function (btn) {
            btn.attr('disabled', false).removeClass('disabled');
        },

        /**
         * Update index status via ajax
         */
        updateIndexStatus: function () {
            var self = this;
            if (!this.intervalId) {
                this.intervalId = setInterval(function () {
                    var ajaxOptions = {
                        type: 'POST',
                        dataType: 'json',
                        data: {form_key: '<?php echo $this->getFormKey()?>'},
                        url: '<?php echo $this->getUpdateStatusUrl()?>',
                        success: function (result) {
                            if (result.status_html) {
                                self.updateStatusHtml(result.status_html);
                            }
                            if (result.is_finished) {
                                self.enableBtn(self.refreshBtn);
                                self.isTaskAdded = false;
                                self.stopIndexUpdate();
                                window.location.reload();
                            }
                        }
                    };
                    jQuery.ajax(ajaxOptions);
                }, this.checkTime);
            }
        },

        /**
         * Stop update index status
         */
        stopIndexUpdate: function () {
            if (this.intervalId) {
                clearInterval(this.intervalId);
                this.intervalId = null;
            }
        },

        /**
         * Delete task from queue
         *
         * @return {boolean}
         */
        cancelIndex: function () {
            this.stopIndexUpdate();
            var self = this,
                ajaxOptions = {
                    type: 'POST',
                    dataType: 'json',
                    data: {form_key: '<?php echo $this->getFormKey()?>'},
                    url: '<?php echo $this->getCancelIndexUrl()?>',
                    success: function (result) {
                        if (result.error) {
                            self.enableBtn(self.cancelBtn);
                            alert(result.message);
                        } else {
                            self.updateStatusHtml(result.status_html);
                            self.enableBtn(self.refreshBtn);
                        }
                    }
                };
            self.disableBtn(self.cancelBtn);
            jQuery.ajax(ajaxOptions);
            return false;
        },

        /**
         * Put task into the queue
         *
         * @return {boolean}
         */
        refreshIndex: function () {
            var self = this,
                ajaxOptions = {
                    type: 'POST',
                    dataType: 'json',
                    data: {form_key: '<?php echo $this->getFormKey()?>'},
                    url: '<?php echo $this->getRefreshIndexUrl()?>',
                    success: function (result) {
                        if (result.error) {
                            self.enableBtn(self.refreshBtn);
                            alert(result.message);
                        } else {
                            self.isTaskAdded = true;
                            self.updateStatusHtml(result.status_html)
                            self.updateIndexStatus();
                        }


                    }
                };
            self.disableBtn(self.refreshBtn);
            jQuery.ajax(ajaxOptions);
            return false;
        }
    };

    if (goIndex.isTaskAdded) {
        goIndex.updateIndexStatus();
    }
</script>
