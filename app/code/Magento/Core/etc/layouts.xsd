<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * {license_notice}
 *
 * @category    Magento
 * @package     Core
 * @copyright   {copyright}
 * @license     {license_link}
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:include schemaLocation="types.xsd"/>

    <xs:element name="layout">
        <xs:annotation>
            <xs:documentation>
                Handle id must be unique.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element type="handleType" name="handle" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="handleName">
            <xs:selector xpath="handle"></xs:selector>
            <xs:field xpath="@id"></xs:field>
        </xs:key>
    </xs:element>

    <xs:complexType name="argumentType" abstract="true" mixed="true">
        <xs:sequence>
            <xs:element name="updater" type="updaterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" use="required"/>
    </xs:complexType>

    <xs:complexType name="argumentsType">
        <xs:sequence>
            <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="translate" use="optional" fixed="true" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="updaterType">
        <xs:annotation>
            <xs:documentation>
                Argument updater.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:integer" name="sortOrder" use="optional"/>
                <xs:attribute type="xs:string" name="enabled" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:element name="argument" type="argumentType">
        <xs:key name="argumentItemName">
            <xs:selector xpath="item"></xs:selector>
            <xs:field xpath="@name"></xs:field>
        </xs:key>
    </xs:element>

    <xs:element type="actionType" name="action">
        <xs:annotation>
            <xs:documentation>
                Argument name must be unique in scope of action.
            </xs:documentation>
        </xs:annotation>
        <xs:key name="actionArgumentName">
            <xs:selector xpath="argument"></xs:selector>
            <xs:field xpath="@name"></xs:field>
        </xs:key>
    </xs:element>

    <xs:element type="blockType" name="block">
        <xs:annotation>
            <xs:documentation>
                Argument name must be unique in scope of block.
            </xs:documentation>
        </xs:annotation>
        <xs:key name="blockArgumentName">
            <xs:selector xpath="argument"></xs:selector>
            <xs:field xpath="@name"></xs:field>
        </xs:key>
    </xs:element>

    <xs:element type="referenceType" name="reference">
        <xs:annotation>
            <xs:documentation>
                Argument name must be unique in scope of reference.
            </xs:documentation>
        </xs:annotation>
        <xs:key name="referenceArgumentName">
            <xs:selector xpath="argument"></xs:selector>
            <xs:field xpath="@name"></xs:field>
        </xs:key>
    </xs:element>

    <xs:element name="arguments" type="argumentsType"/>
    <xs:element name="container" type="containerType"/>
    <xs:element name="label" type="xs:string"/>
    <xs:element name="update" type="updateType"/>
    <xs:element name="remove" type="removeType"/>
    <xs:element name="move" type="moveType"/>
    <xs:element name="data" type="dataType"/>

    <xs:complexType name="handleType">
        <xs:annotation>
            <xs:documentation>
                Handle is a node which describes how the page should look like for each specified action.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="reference" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="container" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="block" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="update" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="remove" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="move" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:string" name="type"/>
        <xs:attribute type="xs:string" name="parent"/>
        <xs:attribute type="xs:string" name="owner"/>
        <xs:attribute type="xs:string" name="label"/>
    </xs:complexType>

    <xs:complexType name="referenceType">
        <xs:annotation>
            <xs:documentation>
                This element is used to link an already defined block in layout.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="block" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="arguments" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="container" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="remove" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="move" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="reference" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="update" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name" use="required"/>
    </xs:complexType>

    <xs:complexType name="containerType">
        <xs:annotation>
            <xs:documentation>
                Container for structuring elements of a page.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="remove" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="move" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="block" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="container" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name"/>
        <xs:attribute type="xs:string" name="label"/>
        <xs:attribute type="xs:string" name="output"/>
        <xs:attribute type="xs:string" name="as"/>
        <xs:attribute type="xs:string" name="after"/>
        <xs:attribute type="xs:string" name="before"/>
        <xs:attribute type="xs:string" name="htmlTag"/>
        <xs:attribute type="xs:string" name="htmlClass"/>
        <xs:attribute type="xs:string" name="htmlId"/>
    </xs:complexType>

    <xs:complexType name="blockType" mixed="true">
        <xs:annotation>
            <xs:documentation>
                Part of view that can generate appropriate content.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="block" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="arguments" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="container" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="reference" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="data" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="label" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name" use="optional"/>
        <xs:attribute type="xs:string" name="class" use="optional"/>
        <xs:attribute type="xs:string" name="as" use="optional"/>
        <xs:attribute type="xs:string" name="template" use="optional"/>
        <xs:attribute type="xs:string" name="before" use="optional"/>
        <xs:attribute type="xs:string" name="after" use="optional"/>
        <xs:attribute type="xs:string" name="output" use="optional"/>
        <xs:attribute type="xs:string" name="acl" use="optional"/>
        <xs:attribute type="xs:string" name="label" use="optional"/>
        <xs:attribute type="xs:string" name="alias" use="optional"/>
        <xs:attribute type="xs:string" name="ifconfig" use="optional"/>
    </xs:complexType>

    <xs:complexType name="dataType">
        <xs:annotation>
            <xs:documentation>
                Use data from Service Layer in View Layer.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="xs:string" name="alias" use="required"/>
        <xs:attribute type="xs:string" name="serviceCall" use="optional"/>
    </xs:complexType>

    <xs:complexType name="actionType">
        <xs:annotation>
            <xs:documentation>
                Call public PHP methods of the block class.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="argument" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="method" use="required"/>
        <xs:attribute type="xs:string" name="enabled" use="optional"/>
        <xs:attribute type="xs:string" name="ifconfig" use="optional"/>
    </xs:complexType>

    <xs:complexType name="updateType">
        <xs:annotation>
            <xs:documentation>
                Include another Handle's tags.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="xs:string" name="handle" use="required"/>
    </xs:complexType>

    <xs:complexType name="removeType">
        <xs:annotation>
            <xs:documentation>
                Remove action.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="moveType">
        <xs:annotation>
            <xs:documentation>
                Move action.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute type="xs:string" name="element" use="required"/>
        <xs:attribute type="xs:string" name="destination" use="required"/>
        <xs:attribute type="xs:string" name="as" use="optional"/>
        <xs:attribute type="xs:string" name="after" use="optional"/>
        <xs:attribute type="xs:string" name="before" use="optional"/>
    </xs:complexType>
</xs:schema>
