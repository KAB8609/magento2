<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     default_default
 * @copyright   {copyright}
 * @license     {license_link}
 */

/** @var $this Mage_Bundle_Block_Adminhtml_Catalog_Product_Edit_Tab_Bundle_Option */
?>
<script id="bundle-option-template" type="text/x-jquery-tmpl">
    <div id="<?php echo $this->getFieldId() ?>_{{index}}" class="option-box">
        <div class="option-title" style="display:none">
            <?php echo $this->getOptionDeleteButtonHtml() ?>
        </div>
        <div class="entry-edit-head">
            <span class="ui-icon ui-icon-grip-dotted-vertical"></span>
            <h4 class="icon-head head-edit-form fieldset-legend">{{title}}</h4>
            <span class="ui-icon ui-icon-circle-triangle-s toggle"></span>
            <span class="ui-icon ui-icon-circle-close remove"></span>
        </div>
        <table class="option-header" cellpadding="0" cellspacing="0">
            <thead>
            <tr>
                <th class="opt-title"><?php echo Mage::helper('Mage_Bundle_Helper_Data')->__('Default Title') ?>
                    <span class="required">*</span>
                </th>
            <?php if (!$this->isDefaultStore()): ?>
                <th class="opt-title"><?php echo Mage::helper('Mage_Bundle_Helper_Data')->__('Store View Title') ?>
                    <span class="required">*</span>
                </th>
            <?php endif; ?>
                <th class="opt-input-type"><?php echo Mage::helper('Mage_Bundle_Helper_Data')->__('Input Type') ?></th>
                <th class="opt-req">&nbsp;</th>
                <th class="opt-order" style="display:none"><?php echo Mage::helper('Mage_Bundle_Helper_Data')->__('Position') ?></th>
                <th>&nbsp;</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>
                <?php if ($this->isDefaultStore()): ?>
                    <input class="input-text required-entry" type="text"
                           name="<?php echo $this->getFieldName() ?>[{{index}}][title]"
                           id="id_<?php echo $this->getFieldName() ?>_{{index}}_title" value="{{title}}" />
                <?php else: ?>
                    <input class="input-text required-entry" type="text"
                           name="<?php echo $this->getFieldName() ?>[{{index}}][default_title]"
                           id="id_<?php echo $this->getFieldName() ?>_{{index}}_default_title" value="{{default_title}}" />
                <?php endif; ?>
                    <input type="hidden" id="<?php echo $this->getFieldId() ?>_id_{{index}}"
                           name="<?php echo $this->getFieldName() ?>[{{index}}][option_id]" value="{{option_id}}" />
                    <input type="hidden" name="<?php echo $this->getFieldName() ?>[{{index}}][delete]"
                           value="" class="delete" />
                </td>
            <?php if (!$this->isDefaultStore()): ?>
                <td>
                    <input class="input-text required-entry" type="text"
                           name="<?php echo $this->getFieldName() ?>[{{index}}][title]"
                           id="id_<?php echo $this->getFieldName() ?>_{{index}}_title_store" value="{{title}}" />
                </td>
            <?php endif; ?>
                <td class="opt-input-type"><?php echo $this->getTypeSelectHtml() ?></td>
                <td class="opt-req">
                    <label>
                        <input type="checkbox" class="is-required" checked="checked" />
                        <?php echo Mage::helper('Mage_Bundle_Helper_Data')->__('Required')?>
                    </label>
                    <span style="display:none"><?php echo $this->getRequireSelectHtml() ?></span>
                </td>
                <td class="opt-order" style="display:none">
                    <input class="input-text validate-zero-or-greater" type="text"
                           name="<?php echo $this->getFieldName() ?>[{{index}}][position]" value="{{position}}" />
                </td>
                <td>&nbsp;</td>
            </tr>
            </tbody>
            <tfoot>
            <tr>
                <td><?php echo $this->getAddSelectionButtonHtml() ?></td>
            </tr>
            </tfoot>
        </table>
        <div id="<?php echo $this->getFieldId() ?>_search_{{index}}" class="selection-search"></div>
    </div>
</script>
<script type="text/javascript">
    var optionTemplate = jQuery('#bundle-option-template').html();
</script>

<?php echo $this->getSelectionHtml() ?>

<script type="text/javascript">
function changeInputType(oldObject, oType) {
    var newObject = document.createElement('input');
    newObject.type = oType;
    if(oldObject.size) newObject.size = oldObject.size;
    if(oldObject.value) newObject.value = oldObject.value;
    if(oldObject.name) newObject.name = oldObject.name;
    if(oldObject.id) newObject.id = oldObject.id;
    if(oldObject.onclick) newObject.onclick = oldObject.onclick;
    if(oldObject.className) newObject.className = oldObject.className;
    oldObject.parentNode.replaceChild(newObject,oldObject);
    return newObject;
}

Bundle.Option = Class.create();
Bundle.Option.prototype = {
    idLabel : '<?php echo $this->getFieldId() ?>',
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : '',
    itemsCount : 0,
    initialize : function(template) {
        this.templateText = template;
    },

    add : function(data) {
        if (!data) {
            data = {};
        } else {
            data.title = data.title.replace(/</g, "&lt;");
            data.title = data.title.replace(/"/g, "&quot;");
        }

        data.index = this.itemsCount++;

        this.template = new Template(this.templateText, this.templateSyntax);

        jQuery('#product_bundle_container').append(jQuery(this.template.evaluate(data)));

        //set selected type
        if (data.type) {
            $A($(this.idLabel + '_'+data.index+'_type').options).each(function(option){
                if (option.value==data.type) option.selected = true;
            });
        }

        //set selected is_require
        if (data.required) {
            $A($(this.idLabel + '_'+data.index+'_required').options).each(function(option){
                if (option.value==data.required) option.selected = true;
            });
        }
        // rebind change notifications
        varienWindowOnload(true);

        if (jQuery && jQuery('#bundle_product_container').data('bundleProduct')) {
            jQuery('#bundle_product_container').bundleProduct('refreshSortableElements');
        }

        return data.index;
    },

    remove : function(event){
        var element = $(Event.findElement(event, 'div')).parentNode;
        if(element){
            Element.select(element, '.delete').each(function(elem){elem.value='1'});
            Element.select(element, ['input', 'select']).each(function(elem){elem.hide(); elem.className = '';});
            Element.hide(element);
        }
    },

    changeType : function(event) {
        var element = Event.element(event);
        parts = element.id.split('_');
        i = parts[2];
        if (element.value == 'multi' || element.value == 'checkbox') {
            inputs = $A($$('#' + bSelection.idLabel + '_box_' + i + ' tr.selection input.default'));
            inputs.each(
                function(elem){
                    //elem.type = "checkbox";
                    changeInputType(elem, 'checkbox');
                }
            );
            /**
             * Hide not needed elements (user defined qty select box)
             */
            inputs = $A($$('#' + bSelection.idLabel + '_box_' + i + ' .qty-box'));
            inputs.each(
                function(elem){
                    elem.hide();
                }
            );

        } else {
            inputs = $A($$('#' + bSelection.idLabel + '_box_' + i + ' tr.selection input.default'));
            have = false;
            for (j=0; j< inputs.length; j++) {
                //inputs[j].type = "radio";
                changeInputType(inputs[j], 'radio');
                if (inputs[j].checked && have) {
                    inputs[j].checked = false;
                } else {
                    have = true;
                }
            }

            /**
             * Show user defined select box
             */
            inputs = $A($$('#' + bSelection.idLabel + '_box_' + i + ' .qty-box'));
            inputs.each(
                function(elem){
                    elem.show();
                }
            );
        }
    },

    priceTypeFixed : function() {
        inputs = $A($$('.price-type-box'));
        inputs.each(
            function(elem){
                elem.show();
            }
        );
    },

    priceTypeDynamic : function() {
        inputs = $A($$('.price-type-box'));
        inputs.each(
            function(elem){
                elem.hide();
            }
        );
    }
};

var optionIndex = 0;
bOption = new Bundle.Option(optionTemplate);
<?php
    foreach ($this->getOptions() as $_option) {
        /** @var $_option Mage_Bundle_Model_Option */
        echo 'optionIndex = bOption.add(', $_option->toJson(), ');', PHP_EOL;
        if ($_option->getSelections()) {
            foreach ($_option->getSelections() as $_selection) {
                /** @var $_selection Mage_Catalog_Model_Product */
                $_selection->setName($this->escapeHtml($_selection->getName()));
                echo 'bSelection.addRow(optionIndex,', $_selection->toJson(), ');', PHP_EOL;
            }
        }
    }
?>
function togglePriceType() {
    bOption['priceType' + ($('price_type').value == '1' ? 'Fixed' : 'Dynamic')]();
}
togglePriceType();
Event.observe('price_type', 'change', togglePriceType);
</script>
