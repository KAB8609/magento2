<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     default_default
 * @copyright   {copyright}
 * @license     {license_link}
 */
 /** @var $this Mage_Adminhtml_Block_Catalog_Product_Edit_Tab_Super_Config */
?>
<div class="entry-edit form-inline" id="<?php echo $this->getId() ?>">
    <div class="fieldset-wrapper" id="<?php echo $this->getId() ?>-wrapper">
        <div class="fieldset-wrapper-title">
            <strong class="title" data-toggle="collapse" data-target="#<?php echo $this->getId() ?>-content">
                <span><?php echo Mage::helper('Mage_Catalog_Helper_Data')->__('Variations') ?></span>
            </strong>
        </div>

        <div class="fieldset-wrapper-content collapse" id="<?php echo $this->getId() ?>-content">
            <fieldset class="fieldset">
                <div class="field" id="variations-search-field">
                    <label class="label" for="configurable-attribute-selector"><span>Search</span></label>
                    <div class="control">
                        <input id="configurable-attribute-selector" class="input-text" placeholder="start typing to search attribute" title="Select Attribute" type="search" autocomplete="off"/>
                    </div>
                </div>

                <!-- Configurable Attributes list -->
                <div id="configurable-attributes-container">
                    <?php echo $this->getChildHtml('template'); ?>
                    <?php
                    foreach ($this->getAttributes() as $attribute) {
                        echo $this->getChildBlock('attribute-renderer')->render(array(
                            'attribute' => $attribute,
                        ));
                    } ?>
                </div>

                <!-- "Generate Variations" button -->
                <?php echo $this->getChildHtml('generate'); ?>

                <!-- Variations -->
                <div id="product-variations-matrix">
                    <?php echo $this->getChildHtml('matrix'); ?>
                </div>

                <!-- Select Associated Product popup -->
                <div id="associated-products-container">
                    <?php echo $this->getGridHtml(); ?>
                </div>

                <input type="hidden" name="affect_configurable_product_attributes" value="1" />
            </fieldset>
        </div>
    </div>

<script type="text/javascript">
jQuery(function($) {
    'use strict';

    var variationsContainer = $("#<?php echo $this->getId()?>"),
        collapsableWrapper = $("#<?php echo $this->getId()?>-wrapper"),
        collapsableArea = $('> .collapse', collapsableWrapper),
        collapsableControl = $('> .fieldset-wrapper-title > [data-toggle="collapse"]', collapsableWrapper),
        stockAvailabilityField = $('#quantity_and_stock_status'),
        qtyField = $('#qty'),
        currentProductTemplateControl = $('#product-template-suggest-container .actions-split > .action-toggle'),
        attributesInput = $("input[name='attributes[]']", variationsContainer),
        hasVariations = <?php echo ($this->_getProduct()->isConfigurable() || $this->getRequest()->has('attributes')) ? 'true' : 'false' ?>;

    $('#configurable-attributes-container').variationsAttributes();

    collapsableArea
        .collapse(hasVariations ? 'show' : 'hide')
        .on('show', function() {
            currentProductTemplateControl
                .addClass('disabled')
                .prop('disabled', true);

            attributesInput.prop('disabled', false);

            qtyField
                .prop('disabled', true)
                .trigger('change');

            stockAvailabilityField
                .prop('disabled', false);

            $.each($('#configurable-attributes-container').variationsAttributes('getAttributes'), function() {
                $('#attribute-' + this.code + '-container select').prop('disabled', true);
            })
        })
        .on('hide', function() {
            currentProductTemplateControl
                .removeClass('disabled')
                .prop('disabled', false);

            qtyField
                .prop('disabled', false)
                .trigger('change');

            if (qtyField.val() == '') {
                stockAvailabilityField
                    .val(0)
                    .trigger('change');

                stockAvailabilityField.prop('disabled', true);
            }
            variationsContainer.find('.entry-edit').remove();
            $.each($('#configurable-attributes-container').variationsAttributes('getAttributes'), function() {
                $('#attribute-' + this.code + '-container select').prop('disabled', false);
            });
            $('#product-variations-matrix').trigger('disable');
        });

    var $gridDialog = $('#associated-products-container').dialog({
        title: 'Select Associated Product',
        autoOpen: false,
        minWidth: 980,
        modal: true,
        resizable: true
    });

    $('#product-variations-matrix')
        .on('generate', function(event, data) {
            $.ajax({
                url: data.url,
                data: $('#product-edit-form').serialize(),
                dataType: 'html',
                context: variationsContainer,
                showLoader: true
            }).success(function(data) {
                $('#product-variations-matrix').html(data);
            });
        })
        .on('disable', function() {
            $(this).html('');
        })
        .on('click', 'input.associated-matrix-product-id', function() {
            $(this).closest('tr').find('input[type!=checkbox],button.action-choose')
                    .prop('disabled', !$(this).is(':checked'));
        })
        .on('click', '.action-choose', function(event) {
            event.preventDefault();
            var grid = window.<?php echo $this->getGridJsObject() ?>;
            var $button = $(this);
            var attributeIds = [];
            variationsContainer.find("input[name='attributes[]']").each(function () {
                attributeIds.push($(this).val());
            });

            grid.reloadParams = {
                filter: $button.data('attributes'),
                'attributes[]': attributeIds
            };
            grid.reload(null, function() {
                $gridDialog.dialog('open')
            });

            grid.rowClickCallback = function(grid, event) {
                if (!this.rows || !this.rows.length) {
                    return;
                }
                var $gridRow = $(event.target).parents('tr'),
                    associatedClass = '.associated-product-';

                if ($gridRow.find(associatedClass + 'id').length) {
                    var $matrixRow = $button.parents('tr'),
                        matrixClass = '.associated-matrix-product-';

                    $.each('name,sku,qty,weight,id'.split(','), function () {
                        var target = $matrixRow.find(matrixClass + this),
                            value = $.trim($gridRow.find(associatedClass + this).text()),
                            button = target.find('.action-choose');

                        target[target.is('input[type=checkbox]') ? 'val' : 'text'](value).append(button);
                    });

                    $matrixRow.find(matrixClass + 'id').prop({checked: true, disabled: false});
                    $matrixRow.find('[type="file"]').prop('disabled', true);
                }
                $gridDialog.dialog('close');
            };
        });
});
</script>
</div>
