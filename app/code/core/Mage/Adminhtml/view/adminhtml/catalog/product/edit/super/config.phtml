<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     default_default
 * @copyright   {copyright}
 * @license     {license_link}
 */
 /** @var $this Mage_Adminhtml_Block_Catalog_Product_Edit_Tab_Super_Config */
?>
<div class="entry-edit" id="<?php echo $this->getId() ?>">
    <div class="entry-edit-head">
        <h4 class="icon-head head-edit-form fieldset-legend">
            <?php echo Mage::helper('Mage_Catalog_Helper_Data')->__('Variations') ?>
        </h4>
        <div style="float:right">
            <input type="checkbox" id="<?php echo $this->getId()?>-checkbox" name="attributes"
                value=""
                <?php if ($this->_getProduct()->isConfigurable() || $this->getRequest()->has('attributes')) {
                    echo ' checked="checked" ';
                }?>
            />
            <label for="<?php echo $this->getId()?>-checkbox">
                <?php echo Mage::helper('Mage_Catalog_Helper_Data')->__('Does this product have variations?') ?>
            </label>
        </div>
    </div>
    <fieldset>
        <input id="attribute-selector"
            placeholder="start typing to search attribute"
            title="Select Attribute" type="text"
            style="width: 100%; margin: 0px 0px 20px; padding: 5px; box-sizing: border-box; font-size: 1.5em;"
            class="input-text" autocomplete="off">
        <div id="attributes-container">
        <?php echo $this->getChildHtml('template'); ?>
        <?php
        foreach ($this->getAttributes() as $attribute) {
            echo $this->getChildBlock('attribute-renderer')->render(array(
                'attribute' => $attribute,
            ));
        } ?>
        </div>
        <?php echo $this->getChildHtml('generate'); ?>
        <div id="product-variations-matrix" class="grid" style="margin:20px 0">
            <?php echo $this->getChildHtml('matrix'); ?>
        </div>
        <div id="associated-products-container" style="display: none;">
            <?php echo $this->getGridHtml(); ?>
        </div>
        <input type="hidden" name="affect_configurable_product_attributes" value="1" />
</fieldset>

<script type="text/javascript">
jQuery(function($) {
    var $variationsContainer = $("#<?php echo $this->getId()?>");
    $('#attributes-container').variationsAttributes();

    $("#<?php echo $this->getId()?>-checkbox").on('click change', function() {
        var $fieldset = $("#<?php echo $this->getId()?> > fieldset"),
            stockAvailabilityField = $('#quantity_and_stock_status'),
            qtyField = $('#qty');
        if ($(this).is(':checked')) {
            $fieldset.show();
            $('#attribute-set-suggest-container .current-set-container').off('click.attribute_set');
            $variationsContainer.find("input[name='attributes[]']").removeAttr('disabled');
            qtyField.prop('disabled', true).trigger('change');
            stockAvailabilityField.prop('disabled', false);
            $.each($('#attributes-container').variationsAttributes('getAttributes'), function() {
                $('#attribute-' + this.code + '-container select').attr('disabled', true);
            })
        } else {
            $('#attribute-set-suggest-container .current-set-container').on('click.attribute_set', function () {
                $(this).next('div').toggle();
            });
            qtyField.prop('disabled', false).trigger('change');
            if (qtyField.val() == '') {
                stockAvailabilityField.val(0).trigger('change');
                stockAvailabilityField.prop('disabled', true);
            }
            $variationsContainer.find('.entry-edit').remove();
            $.each($('#attributes-container').variationsAttributes('getAttributes'), function() {
                $('#attribute-' + this.code + '-container select').removeAttr('disabled');
            });
            $('#product-variations-matrix').trigger('disable');
            $fieldset.hide();
        }
    }).trigger('change');

    var $gridDialog = $('#associated-products-container').dialog({
        title: 'Select Associated Product',
        autoOpen: false,
        minWidth: 980,
        modal: true,
        resizable: true
    });

    $('#product-variations-matrix')
        .on('generate', function(event, data) {
            $.ajax({
                url: data.url,
                data: $('#product-edit-form').serialize(),
                dataType: 'html',
                context: $variationsContainer,
                showLoader: true
            }).success(function(data) {
                $('#product-variations-matrix').html(data);
            });
        })
        .on('disable', function() {
            $(this).html('');
        })
        .on('click', 'input.associated-matrix-product-id', function() {
            $(this).closest('tr').find('input[type!=checkbox]').prop('disabled', !$(this).is(':checked'));
        })
        .on('click', '.choose-product', function(event) {
            event.preventDefault();
            var grid = window.<?php echo $this->getGridJsObject() ?>;
            var $button = $(this);
            var attributeIds = [];
            $variationsContainer.find("input[name='attributes[]']").each(function () {
                attributeIds.push($(this).val());
            });

            grid.reloadParams = {
                'filter': $button.data('attributes'),
                'attributes[]': attributeIds
            };
            grid.reload(null, function() {
                $gridDialog.dialog('open')
            });

            grid.rowClickCallback = function(grid, event) {
                if (!this.rows || !this.rows.length) {
                    return;
                }
                var $gridRow = $(event.target).parents('tr'),
                    associatedClass = '.associated-product-';
                if ($gridRow.find(associatedClass + 'id').length) {
                    var $matrixRow = $button.parents('tr'),
                        matrixClass = '.associated-matrix-product-';
                    $.each('name,sku,qty,weight,id'.split(','), function () {
                        var target = $matrixRow.find(matrixClass + this),
                            value = $.trim($gridRow.find(associatedClass + this).text()),
                            button = target.find('button.choose-product');
                        target[target.is('input[type=checkbox]') ? 'val' : 'text'](value).append(button);
                    });
                    $matrixRow.find(matrixClass + 'id').attr('checked', true).removeAttr('disabled');
                }
                $gridDialog.dialog('close');
            };
        });
});
</script>
</div>
