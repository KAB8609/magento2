<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     Mage_DesignEditor
 * @copyright   {copyright}
 * @license     {license_link}
 */
?>
<?php /** @var $this Mage_DesignEditor_Block_Adminhtml_Editor_Tools_Code_Js */ ?>
<div class="tab-panel" id="vde-tab-js">
    <div id="vde-tab-custom-messages-placeholder">
        <?php echo $this->getChildHtml('messages') ?>
    </div>
    <div class="files-wrapper">
        <div class="files-list">
            <div class="files-list-header">
                <h5 class="title" title="<?php echo $this->escapeHtml($this->getTitle()) ?>"><?php echo $this->getTitle() ?></h5>
                <?php echo $this->getFormHtml() ?>
                <a href="#" class="action-add" data-toggle="tab" title="<?php echo $this->__('Add Files'); ?>">
                    <span><?php echo $this->__('Add Files'); ?></span>
                </a>
            </div>
            <div id="js-file-uploader" class="uploader"></div>
            <div class="files-list-content">
                <ul class="items ui-sortable">
                    <?php echo $this->getChildBlock('design.editor.tools.code.js.items')->setJsFiles($this->getJsFiles())->toHtml(); ?>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="no-display" id="js-file-uploader-template">
    <div id="{{id}}" class="file-row">
        <span class="file-info">{{name}} ({{size}})</span>
        <div class="progressbar-container">
            <div class="progressbar upload-progress" style="width: 0%;"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<script type="text/javascript">
    (function ($) {
        $('#js_files_uploader').fileupload({
            dataType: 'json',
            replaceFileInput: false,
            sequentialUploads: true,
            url : '<?php echo $this->getJsUploadUrl(); ?>',

            /**
             * Add data
             * @param e
             * @param data
             */
            add: function (e, data) {
                $.each(data.files, function (index, file) {
                    data.fileId =  Math.random().toString(36).substr(2,9);
                    var progressTmpl = $('#js-file-uploader-template').children(':first').clone();
                    progressTmpl.attr('id', data.fileId);
                    var fileInfoHtml = progressTmpl.html().replace('{{size}}', byteConvert(file.size))
                            .replace('{{name}}', file.name);
                    progressTmpl.html(fileInfoHtml) ;
                    progressTmpl.appendTo('#js-file-uploader');
                });
                data.submit();
            },

            /**
             * On done event
             * @param e
             * @param data
             */
            done: function (e, data) {
                var progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';
                $(progressSelector).css('width','100%');

                var contentArea = $('.files-list-content .items');
                $(this).val('');

                if (!data.result.error) {
                    $(progressSelector).removeClass('upload-progress').addClass('upload-success')
                    $('#' + data.fileId).delay(2000).fadeOut(2000);
                    contentArea.html(data.result.content);
                } else {
                    $(progressSelector).removeClass('upload-progress').addClass('upload-failure');
                }
            },

            /**
             * On progress
             * @param e
             * @param data
             */
            progress: function(e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                var progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';
                $(progressSelector).css('width', progress + '%');
            },

            /**
             * Fail event
             * @param e
             * @param data
             */
            fail: function(e, data) {
                var progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';
                $(progressSelector).removeClass('upload-progress').addClass('upload-failure');

                $(this).val('');
                alert($.mage.__('File extension not known or unsupported type.'));
            }
        });

        $('.ui-sortable').sortable({
            update: function( event, ui ) {
                var jsOrder = $(this).sortable('serialize', {key: 'js_order[]'});
                $.ajax({
                    url: '<?php echo $this->getJsReorderUrl(); ?>',
                    type: 'POST',
                    dataType: 'json',
                    data: jsOrder,
                    showLoader: false,
                    success: $.proxy(function(response) {
                        if (response.message_html) {
                            $('#vde-tab-custom-messages-placeholder').append(response.message_html);
                        }
                    }, this),
                    error: $.proxy(function() {
                        alert($.mage.__('Error: unknown error.'));
                    }, this)
                });
            }
        });
        $('.ui-sortable').disableSelection();
    })(jQuery);
</script>
