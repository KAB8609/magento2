<?php
/**
 * {license_notice}
 *
 * @category    design
 * @package     Mage_Theme
 * @copyright   {copyright}
 * @license     {license_link}
 */
?>
<?php
/** @var $this Mage_DesignEditor_Block_Adminhtml_Editor_Tools_Files_Content_Uploader */
?>
<div class="scroll-assets">
    <div id="<?php echo $this->getHtmlId() ?>" class="uploader no-display">
        <div class="clear"></div>
        <div class="no-display" data-template="<?php echo $this->getHtmlId() ?>-template">
            <div class="file-row" data-upload-id="${id}">
                <div class="progressbar-container">
                    <span class="file-info-name">${name}</span>
                    <span class="file-info-size">(${size})</span>
                    <span class="file-info-cancel">
                        <button class="action-delete" data-delete-file="${id}">
                            <span><?php echo $this->__('Remove'); ?></span>
                        </button>
                    </span>
                    <div class="progressbar upload-progress"></div>
                </div>
            </div>
        </div>
    </div>
    <div id="contents"></div>
</div>
<div class="form-buttons">
    <span class="fileinput-button">
            <button class="action-default primary" data-action="browse" type="submit">
                <?php echo $this->__('Browse Files'); ?>
            </button>
            <input id="fileupload" type="file" name="<?php echo $this->getConfig()->getFileField() ?>"
                   data-url="<?php echo $this->getConfig()->getUrl() ?>" multiple>
    </span>
    <button class="no-display action-default primary" data-action="upload"><?php echo $this->__('Upload'); ?></button>
</div>

<script type="text/javascript">
//<![CDATA[
(function($) {
    $(function () {
        $('[data-action="upload"]').on('click', function() {
            $('[data-action="upload"]').prop('disabled', true);
            var queuedFiles = $('#fileupload').assetfileupload('option', 'queuedFiles');

            for (var c = 0; c < queuedFiles.length; c++) {
                queuedFiles[c].submit();
            }

            $('[data-upload-id]').find('button').addClass('hidden');

            queuedFiles = $('#fileupload').assetfileupload('option', 'queuedFiles', []);
        });

        $.widget('mage.assetfileupload', $.blueimpFP.fileupload, {
            switchToUploadQueueView: function() {
                $('[data-action="upload"]').removeProp('disabled');
                $('[data-action="upload"]').removeClass('no-display');
                $('[data-action="browse"]').removeClass('primary');
            },

            switchToRegularView: function() {
                $('[data-action="upload"]').addClass('no-display');
                $('[data-action="browse"]').addClass('primary');
                MediabrowserInstance.handleUploadComplete();

                $('[data-upload-id]').each(function(index, row) {
                    if ($(row).data('upload-status') === 'success') {
                        $(row).remove();
                    }
                });
            },

            fileUploadsWithStatus: function(uploadStatus) {
                var arr = [];
                $('[data-upload-id]').each(function(index, row) {
                    if ($(row).data('upload-status') === uploadStatus) {
                        arr.push(row);
                    }
                });

                return arr;
            }
        });

        $('#fileupload').assetfileupload({
            dataType: 'json',
            formData: {
                isAjax: 'true',
                form_key: FORM_KEY
            },
            queuedFiles : [],
            sequentialUploads: true,
            maxFileSize: <?php echo Mage::getObjectManager()->get('Magento_File_Size')->getMaxFileSize()?>,
            add: function(e, data) {
                $(this).assetfileupload('switchToUploadQueueView');

                var that = this;
                $.each(data.files, function (index, file) {
                    data.fileId =  Math.random().toString(36).substr(2,9);
                    var fileRowTmpl = $.tmpl($('[data-template="<?php echo $this->getHtmlId(); ?>-template"]'), {
                        size: byteConvert(file.size),
                        name : file.name,
                        id : data.fileId,
                    });
                    fileRowTmpl.appendTo('#<?php echo $this->getHtmlId() ?>');
                    fileRowTmpl.data('upload-status', 'pending');

                    $('[data-delete-file="' + data.fileId + '"]').on('click', function() {
                        $('[data-upload-id="' + data.fileId + '"]').remove();
                        var origQueuedFiles = $('#fileupload').assetfileupload('option', 'queuedFiles');
                        var newQueuedFiles = [];

                        for (var c = 0; c < origQueuedFiles.length; c++) {
                            var queuedFile = origQueuedFiles[c];
                            if (queuedFile.fileId != data.fileId) {
                                newQueuedFiles.push(queuedFile);
                            }
                        }

                        $('#fileupload').assetfileupload('option', 'queuedFiles', newQueuedFiles);
                        if (newQueuedFiles.length === 0) {
                            $(that).assetfileupload('switchToRegularView');
                        }
                    });
                });

                $(this).assetfileupload('process', data).done(function() {
                    var queuedFiles = $(that).assetfileupload('option', 'queuedFiles');
                    queuedFiles.push(data);
                    $(that).assetfileupload('option', 'queuedFiles', queuedFiles);
                });
            },
            done: function(e, data) {
                var progressSelector = '[data-upload-id="' + data.fileId + '"] .progressbar';
                $(progressSelector).css('width','100%');

                var fileRow = $('[data-upload-id="' + data.fileId + '"]');
                if (data.result && !data.result.hasOwnProperty('errorcode')) {
                    $(progressSelector).removeClass('upload-progress').addClass('upload-success');
                    fileRow.data('upload-status', 'success');
                } else {
                    $(progressSelector).removeClass('upload-progress').addClass('upload-failure');
                    fileRow.data('upload-status', 'failure');
                }

                var fileUploadRows = $('#fileupload').assetfileupload('fileUploadsWithStatus', 'pending');
                if (fileUploadRows.length === 0) {
                    $(this).assetfileupload('switchToRegularView');
                }
            },
            progress: function(e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                var progressSelector = '[data-upload-id="' + data.fileId + '"] .progressbar';
                $(progressSelector).css('width', progress + '%');
            },
            fail: function(e, data) {
                var progressSelector = '[data-upload-id="' + data.fileId + '"] .progressbar';
                $(progressSelector).removeClass('upload-progress').addClass('upload-failure');

                var fileRow = $('[data-upload-id="' + data.fileId + '"]');
                fileRow.data('upload-status', 'failure');
            }
        });
    });
})(jQuery);
//]]>
</script>
