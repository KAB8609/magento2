<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Schema for DI configuration
 *
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="config">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="preference" type="preferenceType" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="type" type="typeType" minOccurs="0" maxOccurs="unbounded">
                    <xs:unique name="uniqueTypeParam">
                        <xs:annotation>
                            <xs:documentation>
                                Param name should be unique in scope of type
                            </xs:documentation>
                        </xs:annotation>
                        <xs:selector xpath="param" />
                        <xs:field xpath="@name" />
                    </xs:unique>
                </xs:element>
                <xs:element name="virtualType" type="virtualTypeType" minOccurs="0" maxOccurs="unbounded">
                    <xs:unique name="uniqueVirtualTypeParam">
                        <xs:annotation>
                            <xs:documentation>
                                Param name should be unique in scope of virtual type
                            </xs:documentation>
                        </xs:annotation>
                        <xs:selector xpath="param" />
                        <xs:field xpath="@name" />
                    </xs:unique>
                </xs:element>
            </xs:choice>
        </xs:complexType>

        <xs:unique name="uniquePreference">
            <xs:annotation>
                <xs:documentation>
                    Preference for each class should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="preference" />
            <xs:field xpath="@for" />
        </xs:unique>
        <xs:unique name="uniqueType">
            <xs:annotation>
                <xs:documentation>
                    Type name should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="type" />
            <xs:field xpath="@name" />
        </xs:unique>
        <xs:unique name="uniqueVirtualType">
            <xs:annotation>
                <xs:documentation>
                    Virtual type name should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="virtualType" />
            <xs:field xpath="@name" />
        </xs:unique>
    </xs:element>

    <xs:complexType name="preferenceType">
        <xs:annotation>
            <xs:documentation>
                Preference help Object Manager to choose class for corresponding interface
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="for" type="xs:string" use="required" />
        <xs:attribute name="type" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="typeType">
        <xs:annotation>
            <xs:documentation>
                With 'type' tag you can point parameters and plugins for certain class
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="plugin" type="pluginType" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="shared" type="xs:boolean" use="optional" />
    </xs:complexType>

    <xs:complexType name="virtualTypeType">
        <xs:complexContent>
            <xs:extension base="typeType">
                <xs:annotation>
                    <xs:documentation>
                        With 'virtualType' tag you can point parameters and plugins for autogenerated class
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="type" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="paramType">
        <xs:choice>
            <xs:element name="instance" minOccurs="0" maxOccurs="1" type="instanceType" />
            <xs:element name="value" minOccurs="0" maxOccurs="1" type="valueType" />
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="instanceType">
        <xs:attribute name="type" type="xs:string" use="required" />
        <xs:attribute name="shared" type="xs:boolean" use="optional" />
    </xs:complexType>

    <xs:complexType name="valueType" mixed="true">
        <xs:choice>
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
        <xs:attribute name="translate" type="xs:string" use="optional" />
        <xs:attribute name="module" type="xs:string" use="optional" />
        <xs:attribute name="type" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name="pluginType">
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="type" type="xs:string" use="optional" />
        <xs:attribute name="disabled" type="xs:boolean" use="optional" />
        <xs:attribute name="sortOrder" type="xs:int" use="optional" />
    </xs:complexType>
</xs:schema>
