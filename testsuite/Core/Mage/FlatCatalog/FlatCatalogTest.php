<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    tests
 * @package     selenium
 * @subpackage  tests
 * @author      Magento Core Team <core@magentocommerce.com>
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

/**
 * Category deletion tests
 * @package     selenium
 * @subpackage  tests
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
class Core_Mage_FlatCatalog_FlatCatalogTest extends Mage_Selenium_TestCase
{
    // @return array
 protected function assertPreConditions()     // Preconditions
    {
        $this->loginAdminUser();             // Log-in
        $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
    }
/**
     *
     * @return array
     * @test
     */    
 public function preconditionsForTests()
 {
         //Data
        $category = $this->loadDataSet('Category', 'sub_category_required');
        $catPath = $category['parent_category'] . '/' . $category['name'];
        $productCat = array('categories' => $catPath);
        $simple = $this->loadDataSet('Product', 'simple_product_visible', $productCat);
        $this->navigate('manage_categories', false);
        $this->categoryHelper()->checkCategoriesPage();
        $this->categoryHelper()->createCategory($category);
        $this->assertMessagePresent('success', 'success_saved_category');
        $this->navigate('manage_products');
        $this->productHelper()->createProduct($simple);
        $this->assertMessagePresent('success', 'success_saved_product');
        return array('productNames'   =>   array('simple' => $simple['general_name']),
                     'catName'            => $category['name'],
                     'catPath'            => $catPath
        );    
 }
 /**
     * <p>Flat Catalog Category is turned</p>
     * <p>Steps:</p>
     * <p>1. Log in to  backend;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend;</p>
     * <p>3. Set Yes in the field  "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>Expected result:</p>
     * <p> Flat Catalog Category should be enabled.;</p>
     *
     *
     * @TestlinkId    TL-MAGE-1964
     * @test
     */    
 public function flatCategoryIsEnabled()
    {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_category_enabled'); 
        $this->addParameter('indexName', 'Category Flat Data');
        //Steps
        $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->navigate('index_management');
       // $xpath = $this->_getControlXpath('link', 'reindex_index_flat_data');
        $this->clickControl('link', 'reindex_index');
    }
    /**
     * <p>Configure search engine optimization settings: Autogenerated Site Map (Disable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Autogenerated Site Map"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p>"Site Map" link is not displayed in the footer. ;</p>
     *
     *
     * @TestlinkId    TL-MAGE-1884
     * @test
     */    
 public function flatCategorySiteMapOff()
 {
      //Data
      $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_autogenerated_sitemap_off'); 
      //Steps
      $this->systemConfigurationHelper()->configure($flatCatalogData);
      $this->goToArea('frontend'); 
      $this->assertFalse($this->controlIsPresent('link', 'site_map'));
 }
     /**
     * <p>Configure search engine optimization settings: Autogenerated Site Map (Enable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Autogenerated Site Map"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p>"Site Map" link is displayed in the footer. ;</p>
     *
     *
     * @TestlinkId    TL-MAGE-1883
     * @test
     */   
 public function flatCategorySiteMapOn()
 {
      //Data
      $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_autogenerated_sitemap_on'); 
      //Steps
      $this->systemConfigurationHelper()->configure($flatCatalogData);
      $this->goToArea('frontend'); 
      $this->assertTrue($this->controlIsPresent('link', 'site_map'));
 }
        /**
     * <p>Configure search engine optimization settings:Popular Search Terms(Enable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Popular Search Terms"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p> "Search Terms" link is displayed in the footer.;</p>
     *
     *
     * @TestlinkId    TL-MAGE-1885
     * @test
     */   
 public function flatCategorySearchTermsOn()
 {
      //Data
      $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_search_terms_on'); 
      //Steps
      $this->systemConfigurationHelper()->configure($flatCatalogData);
      $this->navigate('cache_storage_management');
      $this->clickControl('link', 'select_all', FALSE);
      $this->clickButton('submit');
      $this->goToArea('frontend'); 
      $this->assertTrue($this->controlIsPresent('link', 'popular_search_terms'));
 }
       /**
     * <p>Configure search engine optimization settings:Popular Search Terms(Disable)</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Search Engine Optimization.﻿</p>
     * <p>3. Select "Disable" in the field "﻿Popular Search Terms"﻿;</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>Expected result:</p>
     * <p> "Search Terms" link is not displayed in the footer.;</p>
     *
     *
     * @TestlinkId    TL-MAGE-1886
     * @test
     */   
 public function flatCategorySearchTermsOff()
 {
      //Data
      $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_search_terms_off'); 
      $this->addParameter('indexName', 'Blocks HTML output');
      //Steps
      $this->systemConfigurationHelper()->configure($flatCatalogData);
      $this->navigate('cache_storage_management');
      $this->clickControl('link', 'select_all', FALSE);
      $this->clickButton('submit');
      $this->goToArea('frontend'); 
      $this->assertFalse($this->controlIsPresent('link', 'popular_search_terms'));
 }
      /**
     * <p>Allow Guest to Write Reviews (set No), when Flat Catalog Category is used</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Product Reviews section.</p>
     * <p>3. Select "No" in the field "﻿Allow Guests to Write Reviews";</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>2. Go to category;</p>
     * <p>3. Select some product and press it.;</p>
     * <p>4. Click link "Be the first to review this product ";</p>
     * <p>Expected result:</p>
     * <p> "Only registered users can write reviews.
     * Please, log in or register" warning is displayed under "Write Your Owm Revievw" on the detail page of the product.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1882
     * @test
     * @depends preconditionsForTests
     */ 
 public function flatCategoryAllowReviewsOff($testData)
 {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_reviews_off'); 
        $product = $testData['productNames']['simple'];
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');    
        $this->productHelper()->frontOpenProduct($product);
        $this->assertTrue($this->controlIsPresent('link', 'first_review'));
        $this->clickControl('link', 'first_review');
        $this->assertFalse($this->buttonIsPresent('submit_review'));
 }
      /**
     * <p>Allow Guest to Write Reviews (set Yes), when Flat Catalog Category is used</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Product Reviews section.</p>
     * <p>3. Select "Yes" in the field "﻿Allow Guests to Write Reviews";</p>
     * <p>4. Press "Save Config".;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to frontend.;</p>
     * <p>2. Go to category;</p>
     * <p>3. Select some product and press it.;</p>
     * <p>4. Click link "Be the first to review this product ";</p>
     * <p>Expected result:</p>
     * <p> Be the first to review this product link should be displayed under name of product.
     * "Write Your Own Review" page should be available for review. ;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1881
     * @test
     * @depends preconditionsForTests
     */ 
 public function flatCategoryAllowReviewsOn($testData)
 {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_reviews_on'); 
        $product = $testData['productNames']['simple'];
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');    
        $this->productHelper()->frontOpenProduct($product);
        $this->assertTrue($this->controlIsPresent('link', 'first_review'));
        $this->clickControl('link', 'first_review');
        $this->assertTrue($this->buttonIsPresent('submit_review'));
 }
      /**
     * <p>Configure frontend settings: Product Listing Sort by</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "Name" value in the field " Product Listing Sort by ".;</p>
     * <p>3. Navigate to view page category in the frontend;</p>
     * <p>Expected result:</p>
     * <p> Name options is displayed default in the "Sort By X" dropdown  in the  page category.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1880
     * @test
     * @depends preconditionsForTests
     */ 
 public function flatCategoryListingSortBy($testData)
 {
     //Data
     $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_listing_sort_by'); 
     $this->addParameter('sortBy', 'Name');
     //Steps
     $this->systemConfigurationHelper()->configure($flatCatalogData);
     $this->goToArea('frontend'); 
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertTrue($this->controlIsPresent('dropdown', 'sort_by_selected'));
 }
      /**
     * <p>Configure frontend setting: Allow All Products per Page(No)</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "No" value in the field " Allow All Products per Page".;</p>
     * <p>3. Navigate to view page category in the frontend;</p>
     * <p>Expected result:</p>
     * <p> There is no "All" option in the Show X per page dropdown on the view page category on the  frontend.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1879
     * @test
     * @depends preconditionsForTests
     */      
 public function flatCategoryAllProductsPerPageOff($testData)
 {
     //Data
     $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_all_products_per_page_off'); 
     //Steps
     $this->systemConfigurationHelper()->configure($flatCatalogData);
     $this->goToArea('frontend');   
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertFalse($this->controlIsPresent('dropdown', 'show_per_page_all'));
 }
      /**
     * <p>Configure frontend setting: Allow All Products per Page(Yes)</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "Yes" value in the field " Allow All Products per Page"..;</p>
     * <p>3. Navigate to view page category in the frontend;</p>
     * <p>Expected result:</p>
     * <p>There is "All" option in the Show X per page dropdown on the view page category on the  frontend;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1878
     * @test
     * @depends preconditionsForTests
     */         
 public function flatCategoryAllProductsPerPageOn($testData)
 {
     //Data
     $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_all_products_per_page_on'); 
     //Steps
     $this->systemConfigurationHelper()->configure($flatCatalogData);
     $this->goToArea('frontend'); 
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_all'));
 }
      /**
     * <p>Configure frontend settings: Product per Page on List</p>
     * <p>Preconditions:</p>
     * <p>1. Select "List"  value in the "List Mode" field;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "10,20,30,40" in the field "Products per Page on List Allowed Values".;</p>
     * <p>3. Set "10" value in the field "Products per Page on List Default Value";</p>
     * <p>4. Navigate to frontend to view page category;</p>
     * <p>Expected result:</p>
     * <p>Should be showed 10  per page (default). "10,20,30,40" values are displayed in the "Show X per page" drop box on the view page category.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1877
     * @test
     * @depends preconditionsForTests
     */                   
 public function flatCategoryProductsOnList($testData)
 {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_products_per_page_on_list'); 
        $this->addParameter('showPerPage', '10');
        //Steps
        $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend');
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_selected'));
        $this->addParameter('showPerPage', '20');
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        $this->addParameter('showPerPage', '30');
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        $this->addParameter('showPerPage', '40');
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
 }
      /**
     * <p>Configure frontend settings: Product per Page on Grid</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>3. Set "Yes" in the field "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>5. Select "Grid" value in the "List Mode" field;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Set "10,20,30" in the field "Products per Page on Grid Allowed Values".;</p>
     * <p>3. Set "10" value in the field "Products per Page on Grid Default Value".;</p>
     * <p>4. Navigate to frontend to view page category;</p>
     * <p>Expected result:</p>
     * <p>Should be showed 10  per page (default). "10,20,30" values are  displayed in the "Show X per page" drop box on the view page category.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1876
     * @test
     * @depends preconditionsForTests
     */          
 public function flatCategoryProductsOnGrid($testData)
 {
        //Data
        $flatCatalogData = $this->loadDataSet('FlatCatalog', 'flat_catalog_products_per_page_on_grid');
        $this->addParameter('showPerPage', '8');
        //Steps
        $this->systemConfigurationHelper()->configure($flatCatalogData);
        $this->goToArea('frontend'); 
        $this->categoryHelper()->frontOpenCategory($testData['catName']);
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page_selected'));
        $this->addParameter('showPerPage', '18');
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
        $this->addParameter('showPerPage', '28');
        $this->assertTrue($this->controlIsPresent('dropdown', 'show_per_page'));
 }
      /**
     * <p>Configure frontend settings: List Mode</p>
     * <p>Preconditions:</p>
     * <p>1. Login to Backend.;</p>
     * <p>2. Go to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>3. Set "Yes" in the field "Use Flat Catalog Category" under "Frontend".;</p>
     * <p>4. Refresh the index.;</p>
     * <p>Steps:</p>
     * <p>1. Navigate to System > Configuration > CATALOG > Catalog > Frontend.;</p>
     * <p>2. Select value  "Grid Only" in the field "List Mode" under "Frontend".;</p>
     * <p>3. Select value  "List Only" in the field "List Mode" under "Frontend".;</p>
     * <p>4. Select value  "Grid (default)/ List" in the field "List Mode" under "Frontend";</p>
     * <p>5. Select value  "List (default)/Grig" in the field "List Mode" under "Frontend";</p>
     * <p>Expected result:</p>
     * <p>2. Products should  be displayed in a grid only. Customers should not be able to change the product display.;</p>
     * <p>3. Products should  be displayed in a list only. Customers should not be able to change the product display.;</p>
     * <p>4. Products should  be displayed in a grid (default), but customers should  be able to change the product display as list.;</p>
     * <p>5. Products should  be displayed in a list (default), but customers should  be able to change the product display as grid.;</p>
     *
     *
     * @param array   $testData
     * @TestlinkId    TL-MAGE-1875
     * @test
     * @depends preconditionsForTests
     */          
 public function flatCategoryListMode($testData)
 {
      //Data   
     $flatCatalogDataListOnly = $this->loadDataSet('FlatCatalog', 'flat_catalog_list_only');
     $flatCatalogDataGridOnly = $this->loadDataSet('FlatCatalog', 'flat_catalog_grid_only');
     $flatCatalogDataListDefault = $this->loadDataSet('FlatCatalog', 'flat_catalog_list_default');
     $flatCatalogDataGridDefault = $this->loadDataSet('FlatCatalog', 'flat_catalog_grid_default');
     $this->addParameter('productName', $testData['productNames']['simple']);
     //Steps for List Only
     $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
     $this->systemConfigurationHelper()->configure($flatCatalogDataListOnly);
     $this->goToArea('frontend');
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertFalse($this->controlIsPresent('link', 'grid'));
     $this->assertFalse($this->controlIsPresent('link', 'list'));
     $this->assertTrue($this->controlIsPresent('link', 'learn_more'));
     //Steps for Grid Only
     $this->goToArea('admin', 'dashboard');
     $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
     $this->systemConfigurationHelper()->configure($flatCatalogDataGridOnly);
     $this->goToArea('frontend');
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertFalse($this->controlIsPresent('link', 'grid'));
     $this->assertFalse($this->controlIsPresent('link', 'list'));
     $this->assertFalse($this->controlIsPresent('link', 'learn_more'));
     //Steps for List Default
     $this->goToArea('admin', 'dashboard');
     $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
     $this->systemConfigurationHelper()->configure($flatCatalogDataListDefault);
     $this->goToArea('frontend');
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertTrue($this->controlIsPresent('link', 'grid'));
     $this->assertTrue($this->controlIsPresent('link', 'list'));
     $this->assertTrue($this->controlIsPresent('link', 'learn_more'));
     //Steps for Grid Default
     $this->goToArea('admin', 'dashboard');
     $this->navigate('system_configuration');    // Navigate to System -> Configuration -> CATALOG -> Catalog
     $this->systemConfigurationHelper()->configure($flatCatalogDataGridDefault);
     $this->goToArea('frontend');
     $this->categoryHelper()->frontOpenCategory($testData['catName']);
     $this->assertTrue($this->controlIsPresent('link', 'grid'));
     $this->assertTrue($this->controlIsPresent('link', 'list'));
     $this->assertFalse($this->controlIsPresent('link', 'learn_more'));
 }
}
?>
